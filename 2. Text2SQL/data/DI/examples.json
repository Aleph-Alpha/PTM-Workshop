[
    {
      "question": "What are the ids and names of the companies that operated more than one flight?",
      "query": "SELECT T1.id ,  T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id  =  T2.company_id GROUP BY T1.id HAVING count(*)  >  1",
      "db_id": "flight_company"
    },
    {
      "question": "What are the names of the three artists who have produced the most songs, and how many works did they produce?",
      "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",
      "db_id": "music_1"
    },
    {
      "question": "What is the most common interaction type between enzymes and medicine? And how many are there?",
      "query": "SELECT interaction_type ,  count(*) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count(*) DESC LIMIT 1",
      "db_id": "medicine_enzyme_interaction"
    },
    {
      "question": "What are the first and last names of all the candidates?",
      "query": "SELECT T2.first_name ,  T2.last_name FROM candidates AS T1 JOIN people AS T2 ON T1.candidate_id = T2.person_id",
      "db_id": "student_assessment"
    },
    {
      "question": "What are the different transaction types, and how many transactions of each have taken place?",
      "query": "SELECT transaction_type ,  count(*) FROM Financial_transactions GROUP BY transaction_type",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "Show the number of trains",
      "query": "SELECT count(*) FROM train",
      "db_id": "train_station"
    },
    {
      "question": "What are id and name of the products whose price is lower than 600 or higher than 900?",
      "query": "SELECT product_id ,  product_name FROM products WHERE product_price  <  600 OR product_price  >  900",
      "db_id": "department_store"
    },
    {
      "question": "Find the name and email for the users who have more than one follower.",
      "query": "SELECT T1.name ,  T1.email FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid  =  T2.f1 GROUP BY T2.f1 HAVING count(*)  >  1",
      "db_id": "twitter_1"
    },
    {
      "question": "How many students does each advisor have?",
      "query": "SELECT Advisor ,  count(*) FROM STUDENT GROUP BY Advisor",
      "db_id": "voter_2"
    },
    {
      "question": "What is the first name of the students who are in age 20 to 25 and living in PHL city?",
      "query": "SELECT fname FROM student WHERE city_code  =  'PHL' AND age BETWEEN 20 AND 25",
      "db_id": "dorm_1"
    },
    {
      "question": "Show distinct first and last names for all customers with an account.",
      "query": "SELECT DISTINCT T1.customer_first_name ,  T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id  =  T2.customer_id",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "Which months have more than 2 happy hours?",
      "query": "SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count(*)  >  2",
      "db_id": "coffee_shop"
    },
    {
      "question": "What is the temperature of \"Shanghai\" city in January?",
      "query": "SELECT T2.Jan FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.city = \"Shanghai\"",
      "db_id": "city_record"
    },
    {
      "question": "Which papers have the substring \"ML\" in their titles? Return the titles of the papers.",
      "query": "SELECT title FROM papers WHERE title LIKE \"%ML%\"",
      "db_id": "icfp_1"
    },
    {
      "question": "What are the name and location of the cinema with the largest capacity?",
      "query": "SELECT name ,  LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1",
      "db_id": "cinema"
    },
    {
      "question": "What are the ids of the stations in San Francisco that normally have more than 10 bikes available?",
      "query": "SELECT id FROM station WHERE city  =  \"San Francisco\" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg(bikes_available)  >  10",
      "db_id": "bike_1"
    },
    {
      "question": "Show names of actors that have appeared in musical with name \"The Phantom of the Opera\".",
      "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID WHERE T2.Name  =  \"The Phantom of the Opera\"",
      "db_id": "musical"
    },
    {
      "question": "What are the ids of documents with letter 's' in the name with any expense budgets.",
      "query": "SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id  =  T2.document_id WHERE T1.document_name LIKE '%s%'",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "How many stations does Mountain View city has?",
      "query": "SELECT COUNT(*) FROM station WHERE city  =  \"Mountain View\"",
      "db_id": "bike_1"
    },
    {
      "question": "List all female students age is older than 18 who is not majoring in 600. List students' first name and last name.",
      "query": "SELECT Fname , Lname FROM Student WHERE Age  >  18 AND Major != 600 AND Sex = 'F';",
      "db_id": "restaurant_1"
    },
    {
      "question": "What is the total revenue of each manufacturer?",
      "query": "SELECT sum(revenue) ,  name FROM manufacturers GROUP BY name",
      "db_id": "manufactory_1"
    },
    {
      "question": "Show me the distinct payment method codes from the invoice record.",
      "query": "SELECT DISTINCT payment_method_code FROM INVOICES",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "What are the highest cost, lowest cost and average cost of procedures?",
      "query": "SELECT MAX(cost) ,  MIN(cost) ,  AVG(cost) FROM procedures",
      "db_id": "hospital_1"
    },
    {
      "question": "What is the total number of enrollment of schools that do not have any goalie player?",
      "query": "SELECT sum(enr) FROM college WHERE cName NOT IN (SELECT cName FROM tryout WHERE pPos  =  \"goalie\")",
      "db_id": "soccer_2"
    },
    {
      "question": "Sort the information about course authors and tutors in alphabetical order of the personal name.",
      "query": "SELECT * FROM Course_Authors_and_Tutors ORDER BY personal_name",
      "db_id": "e_learning"
    },
    {
      "question": "Return the first names and last names of all guests",
      "query": "SELECT guest_first_name ,  guest_last_name FROM Guests",
      "db_id": "apartment_rentals"
    },
    {
      "question": "How many tracks do we have?",
      "query": "SELECT count(*) FROM track",
      "db_id": "race_track"
    },
    {
      "question": "Show the party that has the most people.",
      "query": "SELECT Party FROM people GROUP BY Party ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "debate"
    },
    {
      "question": "Find the number of investors in total.",
      "query": "SELECT count(*) FROM INVESTORS",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "List the names and the locations that the enzymes can make an effect.",
      "query": "SELECT name ,  LOCATION FROM enzyme",
      "db_id": "medicine_enzyme_interaction"
    },
    {
      "question": "List the names of all distinct products in alphabetical order.",
      "query": "SELECT DISTINCT product_name FROM products ORDER BY product_name",
      "db_id": "tracking_orders"
    },
    {
      "question": "What is the id of the trip that has the shortest duration?",
      "query": "SELECT id FROM trip ORDER BY duration LIMIT 1",
      "db_id": "bike_1"
    },
    {
      "question": "Return the types of film market estimations in 1995.",
      "query": "SELECT TYPE FROM film_market_estimation WHERE YEAR  =  1995",
      "db_id": "film_rank"
    },
    {
      "question": "Which physicians are affiliated with both Surgery and Psychiatry departments? Tell me their names.",
      "query": "SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Surgery' INTERSECT SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T3.name  =  'Psychiatry'",
      "db_id": "hospital_1"
    },
    {
      "question": "Who are the ministers, when did they take office, and when did they leave office, ordered by when they left office?",
      "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office",
      "db_id": "party_people"
    },
    {
      "question": "What is the full name of each student who is not allergic to any type of food.",
      "query": "SELECT fname ,  lname FROM Student WHERE StuID NOT IN (SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\")",
      "db_id": "allergy_1"
    },
    {
      "question": "What are the distinct president votes on 08/30/2015?",
      "query": "SELECT DISTINCT PRESIDENT_Vote FROM VOTING_RECORD WHERE Registration_Date  =  \"08/30/2015\"",
      "db_id": "voter_2"
    },
    {
      "question": "Find the number of people whose age is greater than all engineers.",
      "query": "SELECT count(*) FROM Person WHERE age  >  (SELECT max(age) FROM person WHERE job  =  'engineer')",
      "db_id": "network_2"
    },
    {
      "question": "Find the subject ID, name of subject and the corresponding number of courses for each subject, and sort by the course count in ascending order.",
      "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT(*) ASC",
      "db_id": "e_learning"
    },
    {
      "question": "List the number of invoices from Chicago, IL.",
      "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
      "db_id": "store_1"
    },
    {
      "question": "What is the average number of pages per minute color?",
      "query": "SELECT avg(pages_per_minute_color) FROM product",
      "db_id": "store_product"
    },
    {
      "question": "List the names, color descriptions and product descriptions of products with category \"Herbs\".",
      "query": "SELECT T1.product_name ,  T2.color_description ,  T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code  =  T2.color_code WHERE product_category_code  =  \"Herbs\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "What are the ids and first names of customers who do not hold a credit card?",
      "query": "SELECT customer_id ,  customer_first_name FROM Customers EXCEPT SELECT T1.customer_id ,  T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE card_type_code  =  \"Credit\"",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "Give me all the distinct location codes for documents.",
      "query": "SELECT DISTINCT location_code FROM Document_locations",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "What is the id of the department with the least number of staff?",
      "query": "SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count(*) LIMIT 1",
      "db_id": "department_store"
    },
    {
      "question": "What is the name of the 3 employees who get paid the least?",
      "query": "SELECT name FROM Employee ORDER BY salary ASC LIMIT 3",
      "db_id": "flight_1"
    },
    {
      "question": "What are the drivers' first names,last names, and ids for all those that had more than 8 stops or participated in more than 5 races?",
      "query": "SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  8 UNION SELECT T1.forename ,  T1.surname ,  T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid  =  T2.driverid GROUP BY T1.driverid HAVING count(*)  >  5",
      "db_id": "formula_1"
    },
    {
      "question": "Show first name and last name for all the students advised by Michael Goodrich.",
      "query": "SELECT T2.fname ,  T2.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.fname  =  \"Michael\" AND T1.lname  =  \"Goodrich\"",
      "db_id": "activity_1"
    },
    {
      "question": "What are the names of buildings sorted in descending order of building height?",
      "query": "SELECT name FROM buildings ORDER BY Height DESC",
      "db_id": "company_office"
    },
    {
      "question": "How many students have each different allergy?",
      "query": "SELECT Allergy ,  count(*) FROM Has_allergy GROUP BY Allergy",
      "db_id": "allergy_1"
    },
    {
      "question": "How many companies were created by Andy?",
      "query": "SELECT count(*) FROM manufacturers WHERE founder  =  'Andy'",
      "db_id": "manufactory_1"
    },
    {
      "question": "What are the names of all the different reviewers who rates Gone with the Wind?",
      "query": "SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.title  =  'Gone with the Wind'",
      "db_id": "movie_1"
    },
    {
      "question": "What is the names of the physicians who prescribe medication Thesisin?",
      "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"",
      "db_id": "hospital_1"
    },
    {
      "question": "show the titles, and authors or editors for all books made after the year 1989.",
      "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
      "db_id": "culture_company"
    },
    {
      "question": "Find the last names of all the authors that have written a paper with title containing the word \"Monadic\".",
      "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\"",
      "db_id": "icfp_1"
    },
    {
      "question": "What are the first and last names of all drivers who participated in the Australian Grand Prix but not the Chinese Grand Prix?",
      "query": "SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Australian Grand Prix\" EXCEPT SELECT T3.forename ,  T3.surname FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid = T3.driverid WHERE T1.name = \"Chinese Grand Prix\"",
      "db_id": "formula_1"
    },
    {
      "question": "Show all distinct region names ordered by their labels.",
      "query": "SELECT DISTINCT region_name FROM region ORDER BY Label",
      "db_id": "party_people"
    },
    {
      "question": "Which problems are reported by the staff with first name \"Christop\"? Show the descriptions of the problems.",
      "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"",
      "db_id": "tracking_software_problems"
    },
    {
      "question": "Show the minimum, maximum, and average age for all people.",
      "query": "SELECT min(age) ,  max(age) ,  avg(age) FROM people",
      "db_id": "wedding"
    },
    {
      "question": "What are the maximum and average height of the mountains?",
      "query": "SELECT max(height) ,  avg(height) FROM mountain",
      "db_id": "mountain_photos"
    },
    {
      "question": "When did researchers start and stop working?",
      "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "What is the oldest age among the students?",
      "query": "SELECT max(Age) FROM STUDENT",
      "db_id": "voter_2"
    },
    {
      "question": "For each zip code, how many times has the maximum wind speed reached 25 mph?",
      "query": "SELECT zip_code , count(*) FROM weather WHERE max_wind_Speed_mph  >=  25 GROUP BY zip_code",
      "db_id": "bike_1"
    },
    {
      "question": "Show all calendar dates and day Numbers.",
      "query": "SELECT calendar_date ,  day_Number FROM Ref_calendar",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "How many customers live in the city of Prague?",
      "query": "SELECT count(*) FROM customers WHERE city = \"Prague\";",
      "db_id": "store_1"
    },
    {
      "question": "What is the most common status across all cities?",
      "query": "SELECT Status FROM city GROUP BY Status ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "farm"
    },
    {
      "question": "Find the name of the storm that affected both Afghanistan and Albania regions.",
      "query": "SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id  =  T2.region_id JOIN storm AS T3 ON T1.storm_id  =  T3.storm_id WHERE T2.Region_name  =  'Albania'",
      "db_id": "storm_record"
    },
    {
      "question": "What are the minimum and maximum vote percents of elections?",
      "query": "SELECT min(Vote_Percent) ,  max(Vote_Percent) FROM election",
      "db_id": "election_representative"
    },
    {
      "question": "List the authors of submissions in ascending order of scores.",
      "query": "SELECT Author FROM submission ORDER BY Scores ASC",
      "db_id": "workshop_paper"
    },
    {
      "question": "Compute the total amount of settlement across all the settlements.",
      "query": "SELECT sum(Amount_Settled) FROM Settlements",
      "db_id": "insurance_policies"
    },
    {
      "question": "Which problems were reported by the staff named Dameon Frami or Jolie Weber? Give me the ids of the problems.",
      "query": "SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Dameon\" AND T2.staff_last_name = \"Frami\" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Jolie\" AND T2.staff_last_name = \"Weber\"",
      "db_id": "tracking_software_problems"
    },
    {
      "question": "What are the start and end dates for incidents with incident type code \"NOISE\"?",
      "query": "SELECT date_incident_start ,  date_incident_end FROM Behavior_Incident WHERE incident_type_code  =  \"NOISE\"",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "Find the name of students who took any class in the years of 2009 and 2010.",
      "query": "SELECT DISTINCT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id  =  T2.id WHERE YEAR  =  2009 OR YEAR  =  2010",
      "db_id": "college_2"
    },
    {
      "question": "Show all allergy types.",
      "query": "SELECT DISTINCT allergytype FROM Allergy_type",
      "db_id": "allergy_1"
    },
    {
      "question": "What is the name of the album that has the track Ball to the Wall?",
      "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";",
      "db_id": "store_1"
    },
    {
      "question": "List names of all pilot aged 30 or younger in descending alphabetical order.",
      "query": "SELECT Name FROM pilot WHERE Age  <=  30 ORDER BY Name DESC",
      "db_id": "aircraft"
    },
    {
      "question": "Count the number of students the teacher LORIA ONDERSMA teaches.",
      "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"LORIA\" AND T2.lastname  =  \"ONDERSMA\"",
      "db_id": "student_1"
    },
    {
      "question": "What are the titles for courses with two prerequisites?",
      "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2",
      "db_id": "college_2"
    },
    {
      "question": "Who is the composer of track Fast As a Shark?",
      "query": "SELECT composer FROM tracks WHERE name = \"Fast As a Shark\";",
      "db_id": "store_1"
    },
    {
      "question": "Show the name of the building that has the most company offices.",
      "query": "SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id  =  T2.id JOIN Companies AS T3 ON T1.company_id  =  T3.id GROUP BY T1.building_id ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "company_office"
    },
    {
      "question": "What is the most common hometown of gymnasts?",
      "query": "SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "gymnast"
    },
    {
      "question": "What are the names of representatives and the dates of elections they participated in.",
      "query": "SELECT T2.Name ,  T1.Date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID",
      "db_id": "election_representative"
    },
    {
      "question": "Show the title and publication dates of books.",
      "query": "SELECT T1.Title ,  T2.Publication_Date FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID  =  T2.Book_ID",
      "db_id": "book_2"
    },
    {
      "question": "How many restaurant is the Sandwich type restaurant?",
      "query": "SELECT count(*) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID =  Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'",
      "db_id": "restaurant_1"
    },
    {
      "question": "What is the payment method code and party phone of the party with the email 'enrico09@example.com'?",
      "query": "SELECT payment_method_code ,  party_phone FROM parties WHERE party_email  =  \"enrico09@example.com\"",
      "db_id": "e_government"
    },
    {
      "question": "Count the total number of policies used by the customer named \"Dayana Robel\".",
      "query": "SELECT count(*) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Dayana Robel\"",
      "db_id": "insurance_fnol"
    },
    {
      "question": "What are the details for all projects that did not hire any staff in a research role?",
      "query": "SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code  =  'researcher' )",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "What are the names of body builders?",
      "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID",
      "db_id": "body_builder"
    },
    {
      "question": "Find the average age of female (sex is F) students who have secretary votes in the spring election cycle.",
      "query": "SELECT avg(T1.Age) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  SECRETARY_Vote WHERE T1.Sex  =  \"F\" AND T2.Election_Cycle  =  \"Spring\"",
      "db_id": "voter_2"
    },
    {
      "question": "What are the names and years released for the movies with the top 3 highest ratings?",
      "query": "SELECT T2.title ,  T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID ORDER BY T1.stars DESC LIMIT 3",
      "db_id": "movie_1"
    },
    {
      "question": "What are the names of photos taken with the lens brand 'Sigma' or 'Olympus'?",
      "query": "SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id  =  T1.id WHERE T1.brand  =  'Sigma' OR T1.brand  =  'Olympus'",
      "db_id": "mountain_photos"
    },
    {
      "question": "Which catalog content has the highest height? Give me the catalog entry name.",
      "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1",
      "db_id": "product_catalog"
    },
    {
      "question": "Display the first name, and department number for all employees whose last name is \"McEwen\".",
      "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'",
      "db_id": "hr_1"
    },
    {
      "question": "List the companies and the investors of entrepreneurs.",
      "query": "SELECT Company ,  Investor FROM entrepreneur",
      "db_id": "entrepreneur"
    },
    {
      "question": "List the branch name and city without any registered members.",
      "query": "SELECT name ,  city FROM branch WHERE branch_id NOT IN (SELECT branch_id FROM membership_register_branch)",
      "db_id": "shop_membership"
    },
    {
      "question": "Show all locations that have train stations with at least 15 platforms and train stations with more than 25 total passengers.",
      "query": "SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms  >=  15 AND total_passengers  >  25",
      "db_id": "train_station"
    },
    {
      "question": "Find the names of catalog entries with level number 8.",
      "query": "SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id  =  t2.catalog_entry_id WHERE t2.catalog_level_number  =  \"8\"",
      "db_id": "product_catalog"
    },
    {
      "question": "Find the name of students who didn't take any course from Biology department.",
      "query": "SELECT name FROM student WHERE id NOT IN (SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id  =  T2.course_id WHERE T2.dept_name  =  'Biology')",
      "db_id": "college_2"
    },
    {
      "question": "What are the average fastest lap speed in races held after 2004 grouped by race name and ordered by year?",
      "query": "SELECT avg(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
      "db_id": "formula_1"
    },
    {
      "question": "Show each gender code and the corresponding count of guests sorted by the count in descending order.",
      "query": "SELECT gender_code ,  COUNT(*) FROM Guests GROUP BY gender_code ORDER BY COUNT(*) DESC",
      "db_id": "apartment_rentals"
    },
    {
      "question": "What are the titles of all movies that have not been rated?",
      "query": "SELECT title FROM Movie WHERE mID NOT IN (SELECT mID FROM Rating)",
      "db_id": "movie_1"
    },
    {
      "question": "List the names of customers who have once canceled the purchase of the product \"food\" (the item status is \"Cancel\").",
      "query": "SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = \"Cancel\" AND T4.product_name = \"food\" GROUP BY T1.customer_id HAVING count(*)  >=  1",
      "db_id": "tracking_orders"
    },
    {
      "question": "how many airports are there in each country?",
      "query": "SELECT count(*) ,  country FROM airport GROUP BY country",
      "db_id": "flight_company"
    },
    {
      "question": "Find the name, city, and country of the airport that has the highest latitude.",
      "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1",
      "db_id": "flight_4"
    },
    {
      "question": "What are the addresses of the course authors who teach either \"operating system\" or \"data structure\" course.",
      "query": "SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id  =  T2.author_id WHERE T2.course_name  =  \"operating system\" OR T2.course_name  =  \"data structure\"",
      "db_id": "e_learning"
    },
    {
      "question": "Which catalog contents has price above 700 dollars? Show their catalog entry names and capacities.",
      "query": "SELECT catalog_entry_name ,  capacity FROM Catalog_Contents WHERE price_in_dollars  >  700",
      "db_id": "product_catalog"
    },
    {
      "question": "Show the id, name of each festival and the number of artworks it has nominated.",
      "query": "SELECT T1.Festival_ID ,  T3.Festival_Name ,  COUNT(*) FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID GROUP BY T1.Festival_ID",
      "db_id": "entertainment_awards"
    },
    {
      "question": "Find the name of the train whose route runs through greatest number of stations.",
      "query": "SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id  =  t2.train_id GROUP BY t2.train_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "station_weather"
    },
    {
      "question": "what are the names and classes of the ships that do not have any captain yet?",
      "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",
      "db_id": "ship_1"
    },
    {
      "question": "Count the number of total papers.",
      "query": "SELECT count(*) FROM papers",
      "db_id": "icfp_1"
    },
    {
      "question": "Find the first and last name of all the teachers that teach EVELINA BROMLEY.",
      "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T1.firstname  =  \"EVELINA\" AND T1.lastname  =  \"BROMLEY\"",
      "db_id": "student_1"
    },
    {
      "question": "Which parties have delegates in both the \"Appropriations\" committee and the \"Economic Matters\" committee?",
      "query": "SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Appropriations\" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID WHERE T1.Committee  =  \"Economic Matters\"",
      "db_id": "election"
    },
    {
      "question": "Return the average total amount purchased and total value purchased for the supplier who supplies the greatest number of products.",
      "query": "SELECT avg(total_amount_purchased) ,  avg(total_value_purchased) FROM Product_Suppliers WHERE supplier_id  =  (SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count(*) DESC LIMIT 1)",
      "db_id": "department_store"
    },
    {
      "question": "Which city does has most number of customers?",
      "query": "SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count(*) DESC LIMIT 1;",
      "db_id": "driving_school"
    },
    {
      "question": "List the dates of enrollment and completion of the student with family name \"Zieme\" and personal name \"Bernie\".",
      "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.family_name  =  \"Zieme\" AND T2.personal_name  =  \"Bernie\"",
      "db_id": "e_learning"
    },
    {
      "question": "Which department has the largest number of employees?",
      "query": "SELECT name FROM department GROUP BY departmentID ORDER BY count(departmentID) DESC LIMIT 1;",
      "db_id": "hospital_1"
    },
    {
      "question": "What is average and maximum salary of all employees.",
      "query": "SELECT avg(salary) ,  max(salary) FROM Employee",
      "db_id": "flight_1"
    },
    {
      "question": "What is the id of the project with least number of documents?",
      "query": "SELECT project_id FROM Documents GROUP BY project_id ORDER BY count(*) ASC LIMIT 1",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "Find the settlement amount of the claim with the largest claim amount. Show both the settlement amount and claim amount.",
      "query": "SELECT Amount_Settled ,  Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1",
      "db_id": "insurance_policies"
    },
    {
      "question": "What are the first and last names of all customers with more than 2 payments?",
      "query": "SELECT T2.first_name ,  T2.last_name FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count(*)  >  2;",
      "db_id": "driving_school"
    },
    {
      "question": "Count the number of distinct player positions.",
      "query": "SELECT count(DISTINCT POSITION) FROM player",
      "db_id": "school_player"
    },
    {
      "question": "Find the number of rooms with more than 50 capacity for each building.",
      "query": "SELECT count(*) ,  building FROM classroom WHERE capacity  >  50 GROUP BY building",
      "db_id": "college_2"
    },
    {
      "question": "What are the maximum duration and resolution of songs grouped and ordered by languages?",
      "query": "SELECT max(T1.duration) ,  max(T2.resolution) ,  T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id GROUP BY T2.languages ORDER BY T2.languages",
      "db_id": "music_1"
    },
    {
      "question": "How many games are played for all football games by students on scholarship?",
      "query": "SELECT sum(gamesplayed) FROM Sportsinfo WHERE sportname  =  \"Football\" AND onscholarship  =  'Y'",
      "db_id": "game_1"
    },
    {
      "question": "What are the statement id and statement detail for the statement that has the most corresponding accounts?",
      "query": "SELECT T1.statement_id ,  T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id  =  T2.statement_id GROUP BY T1.statement_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "Give me the name of each club.",
      "query": "SELECT clubname FROM club",
      "db_id": "club_1"
    },
    {
      "question": "Which customer status code has least number of customers?",
      "query": "SELECT customer_status_code FROM Customers GROUP BY customer_status_code ORDER BY count(*) ASC LIMIT 1;",
      "db_id": "driving_school"
    },
    {
      "question": "What is the language that was used most often in songs with resolution above 500?",
      "query": "SELECT artist_name FROM song WHERE resolution  >  500 GROUP BY languages ORDER BY count(*) DESC LIMIT 1",
      "db_id": "music_1"
    },
    {
      "question": "Find the names of the candidates whose support percentage is lower than their oppose rate.",
      "query": "SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id  =  t2.people_id WHERE t2.support_rate  <  t2.oppose_rate",
      "db_id": "candidate_poll"
    },
    {
      "question": "Show names of technicians in ascending order of quality rank of the machine they are assigned.",
      "query": "SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id  =  T2.machine_id JOIN technician AS T3 ON T1.technician_ID  =  T3.technician_ID ORDER BY T2.quality_rank",
      "db_id": "machine_repair"
    },
    {
      "question": "What are the different affiliations, and how many schools with each have an enrollment size of above 20000?",
      "query": "SELECT count(*) ,  affiliation FROM university WHERE enrollment  >  20000 GROUP BY affiliation",
      "db_id": "university_basketball"
    },
    {
      "question": "What is the velocity of the pilot named 'Thompson'?",
      "query": "SELECT avg(velocity) FROM flight WHERE pilot  =  'Thompson'",
      "db_id": "flight_company"
    },
    {
      "question": "Which customer made the largest amount of claim in a single claim? Return the customer details.",
      "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)",
      "db_id": "insurance_and_eClaims"
    },
    {
      "question": "What are the first names and department numbers for employees with last name McEwen?",
      "query": "SELECT first_name ,  department_id FROM employees WHERE last_name  =  'McEwen'",
      "db_id": "hr_1"
    },
    {
      "question": "What are the names of the songs that have a lower rating than at least one blues song?",
      "query": "SELECT song_name FROM song WHERE rating  <  (SELECT max(rating) FROM song WHERE genre_is  =  \"blues\")",
      "db_id": "music_1"
    },
    {
      "question": "Find the number of matches in different competitions.",
      "query": "SELECT count(*) ,  Competition FROM MATCH GROUP BY Competition",
      "db_id": "city_record"
    },
    {
      "question": "What are the different schools and their nicknames, ordered by their founding years?",
      "query": "SELECT school ,  nickname FROM university ORDER BY founded",
      "db_id": "university_basketball"
    },
    {
      "question": "What are the task details, task id and project id for the projects which are detailed as 'omnis' or  have more than 2 outcomes?",
      "query": "SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id WHERE T2.project_details  =  'omnis' UNION SELECT T1.task_details ,  T1.task_id ,  T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id  =  T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.project_id HAVING count(*)  >  2",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "Find the average unit price of jazz tracks.",
      "query": "SELECT AVG(UnitPrice) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId  =  T2.GenreId WHERE T1.Name  =  \"Jazz\"",
      "db_id": "chinook_1"
    },
    {
      "question": "Find the name of the activity that has the largest number of student participants.",
      "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
      "db_id": "activity_1"
    },
    {
      "question": "What is the id of the most recent order?",
      "query": "SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1",
      "db_id": "tracking_orders"
    },
    {
      "question": "Find the physician who was trained in the most expensive procedure?",
      "query": "SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment ORDER BY T3.cost DESC LIMIT 1",
      "db_id": "hospital_1"
    },
    {
      "question": "How many assessment notes are there in total?",
      "query": "SELECT count(*) FROM ASSESSMENT_NOTES",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "How many lessons were in cancelled state?",
      "query": "SELECT count(*) FROM Lessons WHERE lesson_status_code = \"Cancelled\";",
      "db_id": "driving_school"
    },
    {
      "question": "How much in total does customer with first name as Carole and last name as Bernhard paid?",
      "query": "SELECT sum(T1.amount_payment) FROM Customer_Payments AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = \"Carole\" AND T2.last_name = \"Bernhard\"",
      "db_id": "driving_school"
    },
    {
      "question": "For each product with some problems, list the count of problems and the product id.",
      "query": "SELECT count(*) ,  T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id",
      "db_id": "tracking_software_problems"
    },
    {
      "question": "Show the names of pilots and models of aircrafts they have flied with.",
      "query": "SELECT T3.Pilot_name ,  T2.Model FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID  =  T3.Pilot_ID",
      "db_id": "pilot_record"
    },
    {
      "question": "How many different songs have shared vocals?",
      "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"shared\"",
      "db_id": "music_2"
    },
    {
      "question": "Return the id and full name of the customer with the most accounts.",
      "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "Which city does student Linda Smith live in?",
      "query": "SELECT city_code FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
      "db_id": "restaurant_1"
    },
    {
      "question": "Find the distinct unit prices for tracks.",
      "query": "SELECT distinct(UnitPrice) FROM TRACK",
      "db_id": "chinook_1"
    },
    {
      "question": "Find the first name of students who are living in the dorm that has most number of amenities.",
      "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid IN (SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid  =  T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid  =  T5.amenid GROUP BY T3.dormid ORDER BY count(*) DESC LIMIT 1)",
      "db_id": "dorm_1"
    },
    {
      "question": "How many students are older than average for each gender?",
      "query": "SELECT count(*) ,  sex FROM student WHERE age  >  (SELECT avg(age) FROM student) GROUP BY sex",
      "db_id": "dorm_1"
    },
    {
      "question": "When did the staff member Janessa Sawayn leave the company?",
      "query": "SELECT date_left_staff FROM Staff WHERE first_name = \"Janessa\" AND last_name = \"Sawayn\";",
      "db_id": "driving_school"
    },
    {
      "question": "How many distinct kinds of injuries happened after season 2010?",
      "query": "SELECT count(DISTINCT T1.injury) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id  =  T2.id WHERE T2.season  >  2010",
      "db_id": "game_injury"
    },
    {
      "question": "What are the distinct ids of customers who made an order after any order that was Cancelled?",
      "query": "SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date  >  (SELECT min(order_date) FROM Customer_Orders WHERE order_status_code  =  \"Cancelled\")",
      "db_id": "department_store"
    },
    {
      "question": "What are the names of all races that occurred after 12:00:00 or before 09:00:00?",
      "query": "SELECT name FROM races WHERE TIME > \"12:00:00\" OR TIME < \"09:00:00\"",
      "db_id": "formula_1"
    },
    {
      "question": "How many apartments do not have any facility?",
      "query": "SELECT count(*) FROM Apartments WHERE apt_id NOT IN (SELECT apt_id FROM Apartment_Facilities)",
      "db_id": "apartment_rentals"
    },
    {
      "question": "List the name, nationality and id of all male architects ordered by their names lexicographically.",
      "query": "SELECT name ,  nationality ,  id FROM architect WHERE gender  =  'male' ORDER BY name",
      "db_id": "architecture"
    },
    {
      "question": "What is the address of the location \"UK Gallery\"?",
      "query": "SELECT Address FROM LOCATIONS WHERE Location_Name  =  \"UK Gallery\"",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "Wat is the tax source system code and master customer id of the taxes related to each parking fine id?",
      "query": "SELECT T1.source_system_code ,  T1.master_customer_id ,  T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Parking_Fines AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id",
      "db_id": "local_govt_mdm"
    },
    {
      "question": "What are the names of the scientists, and how many projects are each of them working on?",
      "query": "SELECT count(*) ,  T1.name FROM scientists AS T1 JOIN assignedto AS T2 ON T1.ssn  =  T2.scientist GROUP BY T1.name",
      "db_id": "scientist_1"
    },
    {
      "question": "What are the document ids for the budget type code 'SF'?",
      "query": "SELECT document_id FROM Documents_with_expenses WHERE budget_type_code  =  'SF'",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "What are the name and id of the team offering the lowest average salary?",
      "query": "SELECT T1.name ,  T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg(T2.salary) ASC LIMIT 1;",
      "db_id": "baseball_1"
    },
    {
      "question": "Which location names contain the word \"film\"?",
      "query": "SELECT Location_Name FROM LOCATIONS WHERE Location_Name LIKE \"%film%\"",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "How many customers in state of CA?",
      "query": "SELECT count(*) FROM customers WHERE state = \"CA\";",
      "db_id": "store_1"
    },
    {
      "question": "Find the name of tracks which are in Movies playlist but not in music playlist.",
      "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'",
      "db_id": "store_1"
    },
    {
      "question": "Find the total credits of all classes offered by each department.",
      "query": "SELECT sum(T1.crs_credit) ,  T1.dept_code FROM course AS T1 JOIN CLASS AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY T1.dept_code",
      "db_id": "college_1"
    },
    {
      "question": "What is the total point count of the youngest gymnast?",
      "query": "SELECT T1.Total_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID  =  T2.People_ID ORDER BY T2.Age ASC LIMIT 1",
      "db_id": "gymnast"
    },
    {
      "question": "Show flight number for all flights with more than 2000 distance.",
      "query": "SELECT flno FROM Flight WHERE distance  >  2000",
      "db_id": "flight_1"
    },
    {
      "question": "Which university is in Los Angeles county and opened after 1950?",
      "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\" AND YEAR  >  1950",
      "db_id": "csu_1"
    },
    {
      "question": "Find the country of all appelations who have at most three wines.",
      "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3",
      "db_id": "wine_1"
    },
    {
      "question": "Which catalog publisher has published the most catalogs?",
      "query": "SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count(*) DESC LIMIT 1",
      "db_id": "product_catalog"
    },
    {
      "question": "What are the names of all the customers in alphabetical order?",
      "query": "SELECT name FROM accounts ORDER BY name",
      "db_id": "small_bank_1"
    },
    {
      "question": "What are the titles and studios of films that have been produced by a studio whose name contains \"Universal\"?",
      "query": "SELECT title ,  Studio FROM film WHERE Studio LIKE \"%Universal%\"",
      "db_id": "film_rank"
    },
    {
      "question": "Which faculty members are playing either Canoeing or Kayaking? Tell me their first names.",
      "query": "SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
      "db_id": "activity_1"
    },
    {
      "question": "Return the id and full name of the customer who has the fewest accounts.",
      "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "What are the names of all the scientists in alphabetical order?",
      "query": "SELECT name FROM scientists ORDER BY name",
      "db_id": "scientist_1"
    },
    {
      "question": "What is the average age and how many male students are there in each city?",
      "query": "SELECT count(*) ,  avg(age) ,  city_code FROM student WHERE sex  =  'M' GROUP BY city_code",
      "db_id": "dorm_1"
    },
    {
      "question": "What is the average base price of different bed type? List bed type and average base price.",
      "query": "SELECT bedType ,  avg(basePrice) FROM Rooms GROUP BY bedType;",
      "db_id": "inn_1"
    },
    {
      "question": "For each director, what are the titles and ratings for all the movies they reviewed?",
      "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director",
      "db_id": "movie_1"
    },
    {
      "question": "What is the address of each course author or tutor?",
      "query": "SELECT address_line_1 FROM Course_Authors_and_Tutors",
      "db_id": "e_learning"
    },
    {
      "question": "What are the names of the countries and average invoice size of the top countries by size?",
      "query": "SELECT billing_country ,  AVG(total) FROM invoices GROUP BY billing_country ORDER BY AVG(total) DESC LIMIT 10;",
      "db_id": "store_1"
    },
    {
      "question": "What are the ids and names of customers with addressed that contain WY and who do not use a credit card for payment?",
      "query": "SELECT customer_id ,  customer_name FROM customers WHERE customer_address LIKE \"%WY%\" AND payment_method_code != \"Credit Card\"",
      "db_id": "department_store"
    },
    {
      "question": "List all document ids and receipt dates of documents.",
      "query": "SELECT document_id ,  receipt_date FROM Documents;",
      "db_id": "cre_Doc_Control_Systems"
    },
    {
      "question": "What is the the phone number of Nancy Edwards?",
      "query": "SELECT phone FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
      "db_id": "store_1"
    },
    {
      "question": "Show id and location of railways that are associated with more than one train.",
      "query": "SELECT T2.Railway_ID ,  T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT(*)  >  1",
      "db_id": "railway"
    },
    {
      "question": "what are the employee ids and job titles for employees in department 80?",
      "query": "SELECT T1.employee_id ,  T2.job_title FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id  =  T2.job_id WHERE T1.department_id = 80",
      "db_id": "hr_1"
    },
    {
      "question": "What are all distinct country for artists?",
      "query": "SELECT DISTINCT country FROM artist",
      "db_id": "theme_gallery"
    },
    {
      "question": "What is the average unit price of all the tracks?",
      "query": "SELECT AVG(UnitPrice) FROM TRACK",
      "db_id": "chinook_1"
    },
    {
      "question": "How many professors do have a Ph.D. degree?",
      "query": "SELECT count(*) FROM professor WHERE prof_high_degree  =  'Ph.D.'",
      "db_id": "college_1"
    },
    {
      "question": "What are the ids and names of accounts with 4 or more transactions?",
      "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "List the name of all products along with the number of complaints that they have received.",
      "query": "SELECT t1.product_name ,  count(*) FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id GROUP BY t1.product_name",
      "db_id": "customer_complaints"
    },
    {
      "question": "Find the total rating ratio for each channel owner.",
      "query": "SELECT sum(Rating_in_percent) ,  OWNER FROM channel GROUP BY OWNER",
      "db_id": "program_share"
    },
    {
      "question": "What is the maximum and minimum market value of companies?",
      "query": "SELECT max(Market_Value_in_Billion) ,  min(Market_Value_in_Billion) FROM company",
      "db_id": "company_employee"
    },
    {
      "question": "Show the cinema name and location for cinemas with capacity above average.",
      "query": "SELECT name ,  LOCATION FROM cinema WHERE capacity  >  (SELECT avg(capacity) FROM cinema)",
      "db_id": "cinema"
    },
    {
      "question": "What is the total time for all lessons taught by Janessa Sawayn?",
      "query": "SELECT sum(lesson_time) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
      "db_id": "driving_school"
    },
    {
      "question": "List the names of all distinct wines that are made of red color grape.",
      "query": "SELECT DISTINCT T2.Name FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\"",
      "db_id": "wine_1"
    },
    {
      "question": "Return the sum of all payment amounts.",
      "query": "SELECT sum(amount) FROM payment",
      "db_id": "sakila_1"
    },
    {
      "question": "Return the themes, dates, and attendance for exhibitions that happened in 2004.",
      "query": "SELECT T2.theme ,  T1.date ,  T1.attendance FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id WHERE T2.year  =  2004",
      "db_id": "theme_gallery"
    },
    {
      "question": "Find the name of amenity that is most common in all dorms.",
      "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid  =  T2.amenid GROUP BY T2.amenid ORDER BY count(*) DESC LIMIT 1",
      "db_id": "dorm_1"
    },
    {
      "question": "What are the department ids for which more than 10 employees had a commission?",
      "query": "SELECT department_id FROM employees GROUP BY department_id HAVING COUNT(commission_pct) > 10",
      "db_id": "hr_1"
    },
    {
      "question": "What are the names of instructors who have taught C Programming courses?",
      "query": "SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id  =  T2.id JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T3.title  =  'C Programming'",
      "db_id": "college_2"
    },
    {
      "question": "What are the distinct names of customers who have purchased at least three different products?",
      "query": "SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id JOIN order_items AS T3 ON T2.order_id  =  T3.order_id GROUP BY T1.customer_id HAVING COUNT (DISTINCT T3.product_id)  >=  3",
      "db_id": "department_store"
    },
    {
      "question": "Show theme and year for all exhibitions with ticket prices lower than 15.",
      "query": "SELECT theme ,  YEAR FROM exhibition WHERE ticket_price  <  15",
      "db_id": "theme_gallery"
    },
    {
      "question": "Return reviewer name, movie title, stars, and ratingDate. And sort the data first by reviewer name, then by movie title, and lastly by number of stars.",
      "query": "SELECT T3.name ,  T2.title ,  T1.stars ,  T1.ratingDate FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID ORDER BY T3.name ,  T2.title ,  T1.stars",
      "db_id": "movie_1"
    },
    {
      "question": "How old is each student and how many students are each age?",
      "query": "SELECT age ,  count(*) FROM Student GROUP BY age",
      "db_id": "allergy_1"
    },
    {
      "question": "List the first name and last name of all customers.",
      "query": "SELECT first_name ,  last_name FROM Customers;",
      "db_id": "driving_school"
    },
    {
      "question": "Find the number of papers published by authors from the institution \"Tokohu University\".",
      "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"Tokohu University\"",
      "db_id": "icfp_1"
    },
    {
      "question": "How many project members were leaders or started working before '1989-04-24 23:51:54'?",
      "query": "SELECT count(*) FROM Project_Staff WHERE role_code  =  'leader' OR date_from  <  '1989-04-24 23:51:54'",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "What is the apartment number of the apartment with the most beds?",
      "query": "SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1",
      "db_id": "apartment_rentals"
    },
    {
      "question": "Find the name of the teacher who teaches the largest number of students.",
      "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1",
      "db_id": "student_1"
    },
    {
      "question": "What are the payment method codes that have been used by more than 3 parties?",
      "query": "SELECT payment_method_code FROM parties GROUP BY payment_method_code HAVING count(*)  >  3",
      "db_id": "e_government"
    },
    {
      "question": "Show the names of members in ascending order of their rank in rounds.",
      "query": "SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID  =  T2.Member_ID ORDER BY Rank_in_Round ASC",
      "db_id": "decoration_competition"
    },
    {
      "question": "Of all the claims, what was the earliest date when any claim was made?",
      "query": "SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1",
      "db_id": "insurance_policies"
    },
    {
      "question": "How many counties are there in total?",
      "query": "SELECT count(*) FROM county",
      "db_id": "election"
    },
    {
      "question": "Show the times used by climbers to climb mountains in Country Uganda.",
      "query": "SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID  =  T2.Mountain_ID WHERE T2.Country  =  \"Uganda\"",
      "db_id": "climbing"
    },
    {
      "question": "Show the season, the player, and the name of the country that player belongs to.",
      "query": "SELECT T2.Season ,  T2.Player ,  T1.Country_name FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country",
      "db_id": "match_season"
    },
    {
      "question": "What is the average price for flights from Los Angeles to Honolulu.",
      "query": "SELECT avg(price) FROM Flight WHERE origin  =  \"Los Angeles\" AND destination  =  \"Honolulu\"",
      "db_id": "flight_1"
    },
    {
      "question": "Find the phone number of performer \"Ashley\".",
      "query": "SELECT Customer_Phone FROM PERFORMERS WHERE Customer_Name  =  \"Ashley\"",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "Find the total budgets of the Marketing or Finance department.",
      "query": "SELECT sum(budget) FROM department WHERE dept_name  =  'Marketing' OR dept_name  =  'Finance'",
      "db_id": "college_2"
    },
    {
      "question": "What are the different parties of representative? Show the party name and the number of representatives in each party.",
      "query": "SELECT Party ,  COUNT(*) FROM representative GROUP BY Party",
      "db_id": "election_representative"
    },
    {
      "question": "Find the id of the customer who made the most orders.",
      "query": "SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "tracking_orders"
    },
    {
      "question": "What are the names of all people who are friends with Alice for the shortest amount of time?",
      "query": "SELECT name FROM PersonFriend WHERE friend =  'Alice' AND YEAR  =  (SELECT min(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
      "db_id": "network_2"
    },
    {
      "question": "How many albums does Billy Cobham has?",
      "query": "SELECT count(*) FROM albums AS T1 JOIN artists AS T2 ON  T1.artist_id = T2.id WHERE T2.name = \"Billy Cobham\";",
      "db_id": "store_1"
    },
    {
      "question": "Show the maximum amount of transaction.",
      "query": "SELECT max(amount_of_transaction) FROM TRANSACTIONS",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "What are the themes and locations of parties?",
      "query": "SELECT Party_Theme ,  LOCATION FROM party",
      "db_id": "party_host"
    },
    {
      "question": "What is the lowest salary in departments with average salary greater than the overall average.",
      "query": "SELECT min(salary) ,  dept_name FROM instructor GROUP BY dept_name HAVING avg(salary)  >  (SELECT avg(salary) FROM instructor)",
      "db_id": "college_2"
    },
    {
      "question": "List the states where both the secretary of 'Treasury' department and the secretary of 'Homeland Security' were born.",
      "query": "SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id  =  T2.department_id JOIN head AS T3 ON T2.head_id  =  T3.head_id WHERE T1.name  =  'Homeland Security'",
      "db_id": "department_management"
    },
    {
      "question": "Find the distinct first names of the students who have class senator votes.",
      "query": "SELECT DISTINCT T1.Fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID  =  T2.CLASS_Senator_VOTE",
      "db_id": "voter_2"
    },
    {
      "question": "What are the different names of the product characteristics?",
      "query": "SELECT DISTINCT characteristic_name FROM CHARACTERISTICS",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "How many students live in each city?",
      "query": "SELECT city_code ,  count(*) FROM Student GROUP BY city_code",
      "db_id": "allergy_1"
    },
    {
      "question": "How many songs have a lead vocal?",
      "query": "SELECT count(DISTINCT title) FROM vocals AS T1 JOIN songs AS T2 ON T1.songid  =  T2.songid WHERE TYPE  =  \"lead\"",
      "db_id": "music_2"
    },
    {
      "question": "What is the customer id, first and last name with least number of accounts.",
      "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) ASC LIMIT 1",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "What are the speeds of the longest roller coaster?",
      "query": "SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1",
      "db_id": "roller_coaster"
    },
    {
      "question": "What is the sum of hours for projects that scientists with the name Michael Rogers or Carol Smith are assigned to?",
      "query": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'",
      "db_id": "scientist_1"
    },
    {
      "question": "Return the apartment numbers of the apartments with type code \"Flat\".",
      "query": "SELECT apt_number FROM Apartments WHERE apt_type_code  =  \"Flat\"",
      "db_id": "apartment_rentals"
    },
    {
      "question": "What is the total balance of savings accounts not belonging to someone with the name Brown?",
      "query": "SELECT sum(T2.balance) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid  =  T2.custid WHERE T1.name != 'Brown'",
      "db_id": "small_bank_1"
    },
    {
      "question": "Which catalog content has the smallest capacity? Return the catalog entry name.",
      "query": "SELECT catalog_entry_name FROM catalog_contents ORDER BY capacity ASC LIMIT 1",
      "db_id": "product_catalog"
    },
    {
      "question": "How many songs have 4 minute duration?",
      "query": "SELECT count(*) FROM files WHERE duration LIKE \"4:%\"",
      "db_id": "music_1"
    },
    {
      "question": "How many classes are held in each department?",
      "query": "SELECT count(*) ,  dept_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code GROUP BY dept_code",
      "db_id": "college_1"
    },
    {
      "question": "Show ids of students who don't play video game.",
      "query": "SELECT StuID FROM Student EXCEPT SELECT StuID FROM Plays_games",
      "db_id": "game_1"
    },
    {
      "question": "What are the distinct cross reference source system codes which are related to the master customer details 'Gottlieb, Becker and Wyman'?",
      "query": "SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id  =  T2.master_customer_id WHERE T1.cmi_details  =  'Gottlieb ,  Becker and Wyman'",
      "db_id": "local_govt_mdm"
    },
    {
      "question": "How many different items were reviewed by some users?",
      "query": "SELECT count(DISTINCT i_id) FROM review",
      "db_id": "epinions_1"
    },
    {
      "question": "In which buildings are there at least ten professors?",
      "query": "SELECT building FROM Faculty WHERE rank  =  \"Professor\" GROUP BY building HAVING count(*)  >=  10",
      "db_id": "activity_1"
    },
    {
      "question": "What are the email addresses of teachers whose address has zip code \"918\"?",
      "query": "SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id  =  T2.address_id WHERE T1.zip_postcode  =  \"918\"",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "What are the names of entrepreneurs and their corresponding investors, ordered descending by the amount of money requested?",
      "query": "SELECT T2.Name ,  T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested",
      "db_id": "entrepreneur"
    },
    {
      "question": "What is the average age for all people in the table?",
      "query": "SELECT avg(age) FROM Person",
      "db_id": "network_2"
    },
    {
      "question": "Find all the albums in 2012.",
      "query": "SELECT * FROM Albums WHERE YEAR  =  2012",
      "db_id": "music_2"
    },
    {
      "question": "How many movie reviews does each director get?",
      "query": "SELECT count(*) ,  T1.director FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID GROUP BY T1.director",
      "db_id": "movie_1"
    },
    {
      "question": "display job ID for those jobs that were done by two or more for more than 300 days.",
      "query": "SELECT job_id FROM job_history WHERE end_date - start_date  > 300 GROUP BY job_id HAVING COUNT(*) >= 2",
      "db_id": "hr_1"
    },
    {
      "question": "Find the name of the room with the maximum occupancy.",
      "query": "SELECT roomName FROM Rooms ORDER BY maxOccupancy DESC LIMIT 1;",
      "db_id": "inn_1"
    },
    {
      "question": "Which countries do not have a stadium that was opened after 2006?",
      "query": "SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year  >  2006",
      "db_id": "swimming"
    },
    {
      "question": "Return the product type, name, and price for products supplied by supplier 3.",
      "query": "SELECT T2.product_type_code ,  T2.product_name ,  T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id  =  T2.product_id WHERE T1.supplier_id  =  3",
      "db_id": "department_store"
    },
    {
      "question": "For each customer who has at least two orders, find the customer name and number of orders made.",
      "query": "SELECT T2.customer_name ,  count(*) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  >=  2",
      "db_id": "tracking_orders"
    },
    {
      "question": "Show the total number of rooms of all apartments with facility code \"Gym\".",
      "query": "SELECT sum(T2.room_count) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id  =  T2.apt_id WHERE T1.facility_code  =  \"Gym\"",
      "db_id": "apartment_rentals"
    },
    {
      "question": "Return the number of routes with destination airport in Italy operated by the airline with name 'American Airlines'.",
      "query": "SELECT count(*) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid  =  T2.apid JOIN airlines AS T3 ON T1.alid  =  T3.alid WHERE T2.country  =  'Italy' AND T3.name  =  'American Airlines'",
      "db_id": "flight_4"
    },
    {
      "question": "For each staff id, what is the description of the role that is involved with the most number of projects?",
      "query": "SELECT T1.role_description ,  T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code  =  T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id  =  T3.project_id GROUP BY T2.staff_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "Give the different locations of tracks.",
      "query": "SELECT DISTINCT LOCATION FROM track",
      "db_id": "race_track"
    },
    {
      "question": "Return the names and classes of ships that do not have a captain?",
      "query": "SELECT name ,  CLASS FROM ship WHERE ship_id NOT IN (SELECT ship_id FROM captain)",
      "db_id": "ship_1"
    },
    {
      "question": "find all dependent names who have a spouse relation with some employee.",
      "query": "SELECT Dependent_name FROM dependent WHERE relationship  =  'Spouse'",
      "db_id": "company_1"
    },
    {
      "question": "What is the weight of the shortest person?",
      "query": "SELECT Weight FROM people ORDER BY Height ASC LIMIT 1",
      "db_id": "entrepreneur"
    },
    {
      "question": "What is the average number of points for players from the \"AIB\" club?",
      "query": "SELECT avg(T2.Points) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID  =  T2.Club_ID WHERE T1.name  =  \"AIB\"",
      "db_id": "sports_competition"
    },
    {
      "question": "What is the last name and office of the professor from the history department?",
      "query": "SELECT T1.emp_lname ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T3.dept_name  =  'History'",
      "db_id": "college_1"
    },
    {
      "question": "Show the names of customers who have at least 2 mailshots with outcome code 'Order'.",
      "query": "SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE outcome_code  =  'Order' GROUP BY T1.customer_id HAVING count(*)  >=  2",
      "db_id": "customers_campaigns_ecommerce"
    },
    {
      "question": "Which clubs have one or more members from the city with code \"HOU\"? Give me the names of the clubs.",
      "query": "SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.city_code  =  \"HOU\"",
      "db_id": "club_1"
    },
    {
      "question": "Retrieve the open and close dates of all the policies associated with the customer whose name contains \"Diana\"",
      "query": "SELECT t2.date_opened ,  t2.date_closed FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name LIKE \"%Diana%\"",
      "db_id": "insurance_fnol"
    },
    {
      "question": "What are the total number of students who are living in a male dorm?",
      "query": "SELECT count(*) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.gender  =  'M'",
      "db_id": "dorm_1"
    },
    {
      "question": "Find the the name of the customers who have a loan with amount more than 3000.",
      "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000",
      "db_id": "loan_1"
    },
    {
      "question": "For each team, how many technicians are there?",
      "query": "SELECT Team ,  COUNT(*) FROM technician GROUP BY Team",
      "db_id": "machine_repair"
    },
    {
      "question": "List the names of the top 5 oldest people.",
      "query": "SELECT Name FROM People ORDER BY Age DESC LIMIT 5",
      "db_id": "gymnast"
    },
    {
      "question": "What is the name of the movie produced after 2000 and directed by James Cameron?",
      "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000",
      "db_id": "movie_1"
    },
    {
      "question": "Show the maximum and minimum share count of different transaction types.",
      "query": "SELECT transaction_type_code ,  max(share_count) ,  min(share_count) FROM TRANSACTIONS GROUP BY transaction_type_code",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "List the cities which have more than 2 airports sorted by the number of airports.",
      "query": "SELECT city FROM airports GROUP BY city HAVING count(*)  >  2 ORDER BY count(*)",
      "db_id": "flight_4"
    },
    {
      "question": "What are the names of the pilots in alphabetical order?",
      "query": "SELECT Name FROM pilot ORDER BY Name ASC",
      "db_id": "aircraft"
    },
    {
      "question": "What is the first and last name of the oldest employee?",
      "query": "SELECT emp_fname ,  emp_lname FROM employee ORDER BY emp_dob LIMIT 1",
      "db_id": "college_1"
    },
    {
      "question": "What are the names of all employees who are not certified to fly Boeing 737-800s?",
      "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"",
      "db_id": "flight_1"
    },
    {
      "question": "For the airline ids with the top 10 most routes operated, what are their names?",
      "query": "SELECT T1.name ,  T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T2.alid ORDER BY count(*) DESC LIMIT 10",
      "db_id": "flight_4"
    },
    {
      "question": "Find the names and number of works of the three artists who have produced the most songs.",
      "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name GROUP BY T2.artist_name ORDER BY count(*) DESC LIMIT 3",
      "db_id": "music_1"
    },
    {
      "question": "How many budget record has a budget amount smaller than the invested amount?",
      "query": "SELECT count(*) FROM budget WHERE budgeted  <  invested",
      "db_id": "school_finance"
    },
    {
      "question": "List names for drivers from Hartford city and younger than 40.",
      "query": "SELECT name FROM driver WHERE home_city  =  'Hartford' AND age  <  40",
      "db_id": "school_bus"
    },
    {
      "question": "Show codes and fates of missions, and names of ships involved.",
      "query": "SELECT T1.Code ,  T1.Fate ,  T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID  =  T2.Ship_ID",
      "db_id": "ship_mission"
    },
    {
      "question": "Find the department name of the instructor whose name contains 'Soisalon'.",
      "query": "SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'",
      "db_id": "college_2"
    },
    {
      "question": "What is the cell phone number of the student whose address has the lowest monthly rental?",
      "query": "SELECT T2.cell_mobile_number FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id ORDER BY T1.monthly_rental ASC LIMIT 1",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "Find the ids of reviewers who didn't only give 4 star.",
      "query": "SELECT rID FROM Rating WHERE stars != 4",
      "db_id": "movie_1"
    },
    {
      "question": "What are the hosts of competitions whose theme is not \"Aliens\"?",
      "query": "SELECT Hosts FROM farm_competition WHERE Theme !=  'Aliens'",
      "db_id": "farm"
    },
    {
      "question": "What si the youngest employee's first and last name?",
      "query": "SELECT first_name , last_name FROM employees ORDER BY birth_date DESC LIMIT 1;",
      "db_id": "store_1"
    },
    {
      "question": "How many rooms does each block floor have?",
      "query": "SELECT count(*) ,  T1.blockfloor FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor  =  T2.blockfloor AND T1.blockcode  =  T2.blockcode GROUP BY T1.blockfloor",
      "db_id": "hospital_1"
    },
    {
      "question": "How many sections does course ACCT-211 has?",
      "query": "SELECT count(DISTINCT class_section) FROM CLASS WHERE crs_code  =  'ACCT-211'",
      "db_id": "college_1"
    },
    {
      "question": "What is the id of the reviewer whose name has substring \u201cMike\u201d?",
      "query": "SELECT rID FROM Reviewer WHERE name LIKE \"%Mike%\"",
      "db_id": "movie_1"
    },
    {
      "question": "display all the information of those employees who did not have any job in the past.",
      "query": "SELECT * FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM job_history)",
      "db_id": "hr_1"
    },
    {
      "question": "What are the distinct customers who have orders with status \"On Road\"? Give me the customer details?",
      "query": "SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = \"On Road\"",
      "db_id": "tracking_orders"
    },
    {
      "question": "Give the color description that is least common across products.",
      "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) ASC LIMIT 1",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "What is the first and last name of the faculty members who participated in at least one activity? For each of them, also show the number of activities they participated in.",
      "query": "SELECT  T1.fname ,  T1.lname ,  count(*) ,  T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID",
      "db_id": "activity_1"
    },
    {
      "question": "How many patients do each physician take care of? List their names and number of patients they take care of.",
      "query": "SELECT T1.name ,  count(*) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid  =  T2.PCP GROUP BY T1.employeeid",
      "db_id": "hospital_1"
    },
    {
      "question": "What is the name of the department and office location for the professor with the last name of Heffington?",
      "query": "SELECT T3.dept_name  ,  T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num  =  T2.emp_num JOIN department AS T3 ON T2.dept_code  =  T3.dept_code WHERE T1.emp_lname  =  'Heffington'",
      "db_id": "college_1"
    },
    {
      "question": "Find the order dates of the orders with price above 1000.",
      "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "What are the name and primarily affiliated department name of each physician?",
      "query": "SELECT T1.name ,  T3.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID  =  T2.physician JOIN department AS T3 ON T2.department  =  T3.DepartmentID WHERE T2.PrimaryAffiliation  =  1",
      "db_id": "hospital_1"
    },
    {
      "question": "List the date of perpetrators in descending order of the number of people killed.",
      "query": "SELECT Date FROM perpetrator ORDER BY Killed DESC",
      "db_id": "perpetrator"
    },
    {
      "question": "How many services has each resident requested? List the resident id, details, and the count in descending order of the count.",
      "query": "SELECT T1.resident_id ,  T1.other_details ,  count(*) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id  =  T2.resident_id GROUP BY T1.resident_id ORDER BY count(*) DESC",
      "db_id": "local_govt_and_lot"
    },
    {
      "question": "In how many different cities are banks located?",
      "query": "SELECT count(DISTINCT city) FROM bank",
      "db_id": "loan_1"
    },
    {
      "question": "Which product has the most problems? Give me the number of problems and the product name.",
      "query": "SELECT count(*) ,  T1.product_name FROM product AS T1 JOIN problems AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_name ORDER BY count(*) DESC LIMIT 1",
      "db_id": "tracking_software_problems"
    },
    {
      "question": "What are the names of all the stores in the largest district by population?",
      "query": "SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id WHERE district_id  =  (SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1)",
      "db_id": "store_product"
    },
    {
      "question": "How many times has the student Linda Smith visited Subway?",
      "query": "SELECT count(*) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Student.Fname = \"Linda\" AND Student.Lname = \"Smith\" AND Restaurant.ResName = \"Subway\";",
      "db_id": "restaurant_1"
    },
    {
      "question": "What are the names of artist whose exhibitions draw over 200 attendees on average?",
      "query": "SELECT T3.name FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id  =  T2.exhibition_id JOIN artist AS T3 ON T3.artist_id  =  T2.artist_id GROUP BY T3.artist_id HAVING avg(T1.attendance)  >  200",
      "db_id": "theme_gallery"
    },
    {
      "question": "Find the name of the students and their department names sorted by their total credits in ascending order.",
      "query": "SELECT name ,  dept_name FROM student ORDER BY tot_cred",
      "db_id": "college_2"
    },
    {
      "question": "How many clubs are there?",
      "query": "SELECT count(*) FROM club",
      "db_id": "club_1"
    },
    {
      "question": "Find the first names and last names of male (sex is M) faculties who live in building NEB.",
      "query": "SELECT Fname ,  Lname FROM FACULTY WHERE sex  =  \"M\" AND Building  =  \"NEB\"",
      "db_id": "college_3"
    },
    {
      "question": "Which channels broadcast both in the morning and at night? Give me the channel names.",
      "query": "SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id  =  t2.channel_id WHERE t2.time_of_day  =  'Night'",
      "db_id": "program_share"
    },
    {
      "question": "What are the names of wines produced before any wine from the Brander winery?",
      "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
      "db_id": "wine_1"
    },
    {
      "question": "Which kind of policy type was chosen by the most customers?",
      "query": "SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count(*) DESC LIMIT 1",
      "db_id": "insurance_policies"
    },
    {
      "question": "What are the names for the 3 branches that have the most memberships?",
      "query": "SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3",
      "db_id": "shop_membership"
    },
    {
      "question": "What is the number of distinct publication dates?",
      "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
      "db_id": "book_2"
    },
    {
      "question": "What is the area for the appelation which produced the most wines prior to 2010?",
      "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1",
      "db_id": "wine_1"
    },
    {
      "question": "What is the name of the highest rated wine?",
      "query": "SELECT Name FROM WINE ORDER BY Score LIMIT 1",
      "db_id": "wine_1"
    },
    {
      "question": "Show the details and star ratings of the 3 least expensive hotels.",
      "query": "SELECT other_hotel_details ,  star_rating_code FROM HOTELS ORDER BY price_range ASC LIMIT 3",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "List the dates of enrollment and completion of the student with personal name \"Karson\".",
      "query": "SELECT T1.date_of_enrolment ,  T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.personal_name  =  \"Karson\"",
      "db_id": "e_learning"
    },
    {
      "question": "Show the city and the number of branches opened before 2010 for each city.",
      "query": "SELECT city ,  count(*) FROM branch WHERE open_year  <  2010 GROUP BY city",
      "db_id": "shop_membership"
    },
    {
      "question": "Find the white grape used to produce wines with scores above 90.",
      "query": "SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"White\" AND T2.score  >  90",
      "db_id": "wine_1"
    },
    {
      "question": "What is the first name and last name employee helps the customer with first name Leonie?",
      "query": "SELECT T2.FirstName ,  T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId WHERE T1.FirstName  =  \"Leonie\"",
      "db_id": "chinook_1"
    },
    {
      "question": "List the publisher of the publication with the highest price.",
      "query": "SELECT Publisher FROM publication ORDER BY Price DESC LIMIT 1",
      "db_id": "book_2"
    },
    {
      "question": "Give the address of the staff member who has the first name Elsa.",
      "query": "SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE T1.first_name  =  'Elsa'",
      "db_id": "sakila_1"
    },
    {
      "question": "What are the names of scientists who are assigned to any project?",
      "query": "SELECT T2.name FROM assignedto AS T1 JOIN scientists AS T2 ON T1.scientist  =  T2.ssn",
      "db_id": "scientist_1"
    },
    {
      "question": "What is total amount claimed summed across all the claims?",
      "query": "SELECT sum(Amount_Claimed) FROM Claims",
      "db_id": "insurance_policies"
    },
    {
      "question": "How many students are over 18 and do not have allergy to food type or animal type?",
      "query": "SELECT count(*) FROM Student WHERE age  >  18 AND StuID NOT IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" OR T2.allergytype  =  \"animal\")",
      "db_id": "allergy_1"
    },
    {
      "question": "Which range contains the most mountains?",
      "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "climbing"
    },
    {
      "question": "Please show the names and descriptions of aircrafts associated with airports that have a total number of passengers bigger than 10000000.",
      "query": "SELECT T1.Aircraft ,  T1.Description FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID  =  T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID  =  T3.Airport_ID WHERE T3.Total_Passengers  >  10000000",
      "db_id": "aircraft"
    },
    {
      "question": "Return the name and max speed of the storm that affected the most regions.",
      "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "storm_record"
    },
    {
      "question": "How many authors are there?",
      "query": "SELECT count(*) FROM authors",
      "db_id": "icfp_1"
    },
    {
      "question": "What is the average weeks on top of volumes associated with the artist aged 25 or younger?",
      "query": "SELECT avg(T2.Weeks_on_Top) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  25",
      "db_id": "music_4"
    },
    {
      "question": "What are the songs in volumes that have resulted in a nomination at music festivals?",
      "query": "SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume  =  T2.Volume_ID WHERE T1.Result  =  \"Nominated\"",
      "db_id": "music_4"
    },
    {
      "question": "How many faculty is there in total in the year of 2002?",
      "query": "SELECT sum(faculty) FROM faculty WHERE YEAR  =  2002",
      "db_id": "csu_1"
    },
    {
      "question": "What is the reviewer id of Daniel Lewis?",
      "query": "SELECT rID FROM Reviewer WHERE name  =  \"Daniel Lewis\"",
      "db_id": "movie_1"
    },
    {
      "question": "Return the description and unit of measurement for products in the 'Herbs' category.",
      "query": "SELECT product_category_description ,  unit_of_measure FROM ref_product_categories WHERE product_category_code  =  \"Herbs\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "What is the name of the stadium which held the most events?",
      "query": "SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id  =  t2.stadium_id GROUP BY t2.stadium_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "swimming"
    },
    {
      "question": "Return the maximum and minimum customer codes.",
      "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers",
      "db_id": "department_store"
    },
    {
      "question": "How many regions are affected?",
      "query": "SELECT count(DISTINCT region_id) FROM affected_region",
      "db_id": "storm_record"
    },
    {
      "question": "Show the names of festivals that have nominated artworks of type \"Program Talent Show\".",
      "query": "SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T2.Type  =  \"Program Talent Show\"",
      "db_id": "entertainment_awards"
    },
    {
      "question": "List all people names in the order of their date of birth from old to young.",
      "query": "SELECT name FROM people ORDER BY date_of_birth",
      "db_id": "candidate_poll"
    },
    {
      "question": "Show distinct types of artworks that are nominated in festivals in 2007.",
      "query": "SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID  =  T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID  =  T3.Festival_ID WHERE T3.Year  =  2007",
      "db_id": "entertainment_awards"
    },
    {
      "question": "Show the account id and name with at least 4 transactions.",
      "query": "SELECT T1.account_id ,  T2.account_name FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id  =  T2.account_id GROUP BY T1.account_id HAVING count(*)  >=  4",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "Find the code of the document type \"Paper\".",
      "query": "SELECT document_type_code FROM Ref_document_types WHERE document_type_name  =  \"Paper\"",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "How many customers in total?",
      "query": "SELECT count(*) FROM Customers;",
      "db_id": "driving_school"
    },
    {
      "question": "What are the names of customers who never made an order.",
      "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id  =  t2.customer_id",
      "db_id": "customers_and_addresses"
    },
    {
      "question": "What are the weights of entrepreneurs in descending order of money requested?",
      "query": "SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T1.Money_Requested DESC",
      "db_id": "entrepreneur"
    },
    {
      "question": "Find the full name of employee who supported the most number of customers.",
      "query": "SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id  =  T2.support_rep_id GROUP BY T1.id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "store_1"
    },
    {
      "question": "How many Patent outcomes are generated from all the projects?",
      "query": "SELECT count(*) FROM Project_outcomes WHERE outcome_code  =  'Patent'",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "How many diffrent dorm amenities are there?",
      "query": "SELECT count(*) FROM dorm_amenity",
      "db_id": "dorm_1"
    },
    {
      "question": "What are the products with the maximum page size eqal to A4 or a pages per minute color less than 5?",
      "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5",
      "db_id": "store_product"
    },
    {
      "question": "Show names for artists without any exhibition.",
      "query": "SELECT name FROM artist WHERE artist_id NOT IN (SELECT artist_id FROM exhibition)",
      "db_id": "theme_gallery"
    },
    {
      "question": "Show the name of the county with the biggest population.",
      "query": "SELECT County_name FROM county ORDER BY Population DESC LIMIT 1",
      "db_id": "election"
    },
    {
      "question": "Show the number of locations.",
      "query": "SELECT count(*) FROM Ref_locations",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "Show the average population of all counties.",
      "query": "SELECT avg(Population) FROM county",
      "db_id": "election"
    },
    {
      "question": "How many different types of beds are there?",
      "query": "SELECT count(DISTINCT bedType) FROM Rooms;",
      "db_id": "inn_1"
    },
    {
      "question": "Find the names of programs that are never broadcasted in the morning.",
      "query": "SELECT name FROM program EXCEPT SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id  =  t2.program_id WHERE t2.Time_of_day  =  \"Morning\"",
      "db_id": "program_share"
    },
    {
      "question": "What are the names of races that were held after 2017 and the circuits were in the country of Spain?",
      "query": "SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = \"Spain\" AND T1.year > 2017",
      "db_id": "formula_1"
    },
    {
      "question": "What is the phone and email for customer with first name Aniyah and last name Feest?",
      "query": "SELECT customer_phone ,  customer_email FROM Customers WHERE customer_first_name  =  \"Aniyah\" AND customer_last_name  =  \"Feest\"",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "Count the number of captains that have each rank.",
      "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank",
      "db_id": "ship_1"
    },
    {
      "question": "Compute the average age of the members in the club \"Tennis Club\".",
      "query": "SELECT avg(t3.age) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Tennis Club\"",
      "db_id": "club_1"
    },
    {
      "question": "For each aircraft that has won an award, what is its name and how many time has it won?",
      "query": "SELECT T1.Aircraft ,  COUNT(*) FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID  =  T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft",
      "db_id": "aircraft"
    },
    {
      "question": "What are the ids of suppliers which have an average amount purchased of above 50000 or below 30000?",
      "query": "SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg(total_amount_purchased)  >  50000 OR avg(total_amount_purchased)  <  30000",
      "db_id": "department_store"
    },
    {
      "question": "Show the leader names and locations of colleges.",
      "query": "SELECT Leader_Name ,  College_Location FROM college",
      "db_id": "decoration_competition"
    },
    {
      "question": "List all public schools and their locations.",
      "query": "SELECT school ,  LOCATION FROM university WHERE affiliation  =  'Public'",
      "db_id": "university_basketball"
    },
    {
      "question": "Show the ids of students whose advisors are professors.",
      "query": "SELECT T2.StuID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor WHERE T1.rank  =  \"Professor\"",
      "db_id": "activity_1"
    },
    {
      "question": "List the main industry with highest total market value and its number of companies.",
      "query": "SELECT main_industry ,  count(*) FROM company GROUP BY main_industry ORDER BY sum(market_value) DESC LIMIT 1",
      "db_id": "gas_company"
    },
    {
      "question": "How many employees do we have?",
      "query": "SELECT count(*) FROM Employees;",
      "db_id": "cre_Doc_Control_Systems"
    },
    {
      "question": "Find the branch name of the bank that has the most number of customers.",
      "query": "SELECT bname FROM bank ORDER BY no_of_customers DESC LIMIT 1",
      "db_id": "loan_1"
    },
    {
      "question": "What are the countries of mountains with height bigger than 5000?",
      "query": "SELECT Country FROM mountain WHERE Height  >  5000",
      "db_id": "climbing"
    },
    {
      "question": "How many distinct publication dates are there in our record?",
      "query": "SELECT COUNT (DISTINCT Publication_Date) FROM publication",
      "db_id": "book_2"
    },
    {
      "question": "How many different departments are there?",
      "query": "SELECT count(DISTINCT dept_name) FROM department",
      "db_id": "college_1"
    },
    {
      "question": "Find the attribute data type for the attribute named \"Green\".",
      "query": "SELECT attribute_data_type FROM Attribute_Definitions WHERE attribute_name  =  \"Green\"",
      "db_id": "product_catalog"
    },
    {
      "question": "Find the number of students in total.",
      "query": "SELECT count(*) FROM STUDENT",
      "db_id": "voter_2"
    },
    {
      "question": "How many employees do we have?",
      "query": "SELECT count(*) FROM Employee",
      "db_id": "flight_1"
    },
    {
      "question": "For each user, return the name and the average rating of reviews given by them.",
      "query": "SELECT T1.name ,  avg(T2.rating) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id  =  T2.u_id GROUP BY T2.u_id",
      "db_id": "epinions_1"
    },
    {
      "question": "What are the maximum and minimum age of students with major 600?",
      "query": "SELECT max(Age) ,  min(Age) FROM STUDENT WHERE Major  =  600",
      "db_id": "voter_2"
    },
    {
      "question": "List the names of counties that do not have any cities.",
      "query": "SELECT Name FROM county_public_safety WHERE County_ID NOT IN (SELECT County_ID FROM city)",
      "db_id": "county_public_safety"
    },
    {
      "question": "What is \"the date in location from\" and \"the date in location to\" for the document with name \"Robin CV\"?",
      "query": "SELECT T1.date_in_location_from ,  T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id  =  T2.document_id WHERE T2.document_name  =  \"Robin CV\"",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "Which authors have written a paper with title containing the word \"Monadic\"? Return their last names.",
      "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Monadic%\"",
      "db_id": "icfp_1"
    },
    {
      "question": "What is the average duration of songs that have mp3 format and resolution below 800?",
      "query": "SELECT avg(T1.duration) FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T1.formats  =  \"mp3\" AND T2.resolution   <  800",
      "db_id": "music_1"
    },
    {
      "question": "What is the location name of the document \"Robin CV\"?",
      "query": "SELECT T3.location_name FROM All_documents AS T1 JOIN Document_locations AS T2 ON T1.document_id  =  T2.document_id JOIN Ref_locations AS T3 ON T2.location_code  =  T3.location_code WHERE T1.document_name  =  \"Robin CV\"",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "List the state in the US with the most invoices.",
      "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;",
      "db_id": "store_1"
    },
    {
      "question": "On which day was the order placed whose shipment tracking number is 3452?",
      "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452",
      "db_id": "tracking_orders"
    },
    {
      "question": "How many captains are in each rank?",
      "query": "SELECT count(*) ,  rank FROM captain GROUP BY rank",
      "db_id": "ship_1"
    },
    {
      "question": "What are the titles and average ratings for all movies that have the lowest average rating?",
      "query": "SELECT T2.title ,  avg(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID GROUP BY T1.mID ORDER BY avg(T1.stars) LIMIT 1",
      "db_id": "movie_1"
    },
    {
      "question": "What are all the the participant ids, type code and details?",
      "query": "SELECT Participant_ID ,  Participant_Type_Code ,  Participant_Details FROM  Participants",
      "db_id": "local_govt_in_alabama"
    },
    {
      "question": "List name of all amenities which Anonymous Donor Hall has, and sort the results in alphabetic order.",
      "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name",
      "db_id": "dorm_1"
    },
    {
      "question": "Compute the mean price of procedures physician John Wen was trained in.",
      "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
      "db_id": "hospital_1"
    },
    {
      "question": "Find the id and name of the staff who has been assigned for the shortest period.",
      "query": "SELECT T1.staff_id ,  T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id  =  T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1",
      "db_id": "department_store"
    },
    {
      "question": "Find the name of account that has the lowest total checking and saving balance.",
      "query": "SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid ORDER BY T2.balance + T3.balance LIMIT 1",
      "db_id": "small_bank_1"
    },
    {
      "question": "Find the names of customers who are not living in the state of California.",
      "query": "SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id WHERE t3.state_province_county  =  'California'",
      "db_id": "customer_deliveries"
    },
    {
      "question": "What are the titles of films and corresponding types of market estimations?",
      "query": "SELECT T1.Title ,  T2.Type FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID  =  T2.Film_ID",
      "db_id": "film_rank"
    },
    {
      "question": "How many accounts are there for each customer id?",
      "query": "SELECT customer_id ,  count(*) FROM Accounts GROUP BY customer_id",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "Select the code of the product that is cheapest in each product category.",
      "query": "SELECT code ,  name ,  min(price) FROM products GROUP BY name",
      "db_id": "manufactory_1"
    },
    {
      "question": "In what city does Janessa Sawayn live?",
      "query": "SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = \"Janessa\" AND T2.last_name = \"Sawayn\";",
      "db_id": "driving_school"
    },
    {
      "question": "What is the zip code that has the lowest average mean sea level pressure?",
      "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1",
      "db_id": "bike_1"
    },
    {
      "question": "Show the name for regions and the number of storms for each region.",
      "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
      "db_id": "storm_record"
    },
    {
      "question": "What are all the distinct premise types?",
      "query": "SELECT DISTINCT premises_type FROM premises",
      "db_id": "customers_campaigns_ecommerce"
    },
    {
      "question": "What is the number of distinct teams that suffer elimination?",
      "query": "SELECT COUNT (DISTINCT team) FROM elimination",
      "db_id": "wrestler"
    },
    {
      "question": "What is the department name and corresponding building for the department with the greatest budget?",
      "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1",
      "db_id": "college_2"
    },
    {
      "question": "For each fourth-grade classroom, show the classroom number and the total number of students using it.",
      "query": "SELECT classroom ,  count(*) FROM list WHERE grade  =  \"4\" GROUP BY classroom",
      "db_id": "student_1"
    },
    {
      "question": "How many cities have a stadium that was opened before the year of 2006?",
      "query": "SELECT count(DISTINCT city) FROM stadium WHERE opening_year  <  2006",
      "db_id": "swimming"
    },
    {
      "question": "How many products are in the 'Spices' category and have a typical price of over 1000?",
      "query": "SELECT count(*) FROM products WHERE product_category_code  =  \"Spices\" AND typical_buying_price  >  1000",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Show the range that has the most number of mountains.",
      "query": "SELECT Range FROM mountain GROUP BY Range ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "climbing"
    },
    {
      "question": "Which organisation hired the most number of research staff? List the organisation id, type and detail.",
      "query": "SELECT T1.organisation_id ,  T1.organisation_type ,  T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id  =  T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "Show all the Store_Name of drama workshop groups.",
      "query": "SELECT Store_Name FROM Drama_Workshop_Groups",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "What are the different software platforms for devices, and how many devices have each?",
      "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform",
      "db_id": "device"
    },
    {
      "question": "What are the first and last names of the customers with the 10 cheapest invoices?",
      "query": "SELECT T1.first_name ,  T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id ORDER BY total LIMIT 10;",
      "db_id": "store_1"
    },
    {
      "question": "Show the parties that have both representatives in New York state and representatives in Pennsylvania state.",
      "query": "SELECT Party FROM representative WHERE State  =  \"New York\" INTERSECT SELECT Party FROM representative WHERE State  =  \"Pennsylvania\"",
      "db_id": "election_representative"
    },
    {
      "question": "What is the complete description of the job of a researcher?",
      "query": "SELECT role_description FROM Staff_Roles WHERE role_code  =  'researcher'",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "Find the number of routes from the United States to Canada.",
      "query": "SELECT count(*) FROM routes WHERE dst_apid IN (SELECT apid FROM airports WHERE country  =  'Canada') AND src_apid IN (SELECT apid FROM airports WHERE country  =  'United States')",
      "db_id": "flight_4"
    },
    {
      "question": "List the names of phones that are not on any market.",
      "query": "SELECT Name FROM phone WHERE Phone_id NOT IN (SELECT Phone_ID FROM phone_market)",
      "db_id": "phone_market"
    },
    {
      "question": "Show the builder of railways associated with the trains named \"Andaman Exp\".",
      "query": "SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID  =  T2.Railway_ID WHERE T2.Name  =  \"Andaman Exp\"",
      "db_id": "railway"
    },
    {
      "question": "What is the title, credit value, and department name for courses with more than one prerequisite?",
      "query": "SELECT T1.title ,  T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  >  1",
      "db_id": "college_2"
    },
    {
      "question": "Show the studios that have produced films with director \"Nicholas Meyer\" and \"Walter Hill\".",
      "query": "SELECT Studio FROM film WHERE Director  =  \"Nicholas Meyer\" INTERSECT SELECT Studio FROM film WHERE Director  =  \"Walter Hill\"",
      "db_id": "film_rank"
    },
    {
      "question": "Return the famous release date for the oldest artist.",
      "query": "SELECT Famous_Release_date FROM artist ORDER BY Age DESC LIMIT 1",
      "db_id": "music_4"
    },
    {
      "question": "Please list the countries and years of film market estimations.",
      "query": "SELECT T2.Country ,  T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID  =  T2.Market_ID",
      "db_id": "film_rank"
    },
    {
      "question": "How many products have a price higher than the average?",
      "query": "SELECT count(*) FROM products WHERE product_price  >  (SELECT avg(product_price) FROM products)",
      "db_id": "customers_and_products_contacts"
    },
    {
      "question": "Find the name of organizations whose names contain \"Party\".",
      "query": "SELECT organization_name FROM organizations WHERE organization_name LIKE \"%Party%\"",
      "db_id": "e_government"
    },
    {
      "question": "How many hours do the students spend studying in each department?",
      "query": "SELECT sum(stu_hrs) ,  dept_code FROM student GROUP BY dept_code",
      "db_id": "college_1"
    },
    {
      "question": "Which directors had a movie both in the year 1999 and 2000?",
      "query": "SELECT director FROM movie WHERE YEAR  =  2000 INTERSECT SELECT director FROM movie WHERE YEAR  =  1999",
      "db_id": "culture_company"
    },
    {
      "question": "Show the most common nationality of hosts.",
      "query": "SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "party_host"
    },
    {
      "question": "Show all official native languages that contain the word \"English\".",
      "query": "SELECT Official_native_language FROM country WHERE Official_native_language LIKE \"%English%\"",
      "db_id": "match_season"
    },
    {
      "question": "Count the number of customers that have the customer type that is most common.",
      "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1",
      "db_id": "customer_complaints"
    },
    {
      "question": "What are the names and locations of festivals?",
      "query": "SELECT Festival_Name ,  LOCATION FROM festival_detail",
      "db_id": "entertainment_awards"
    },
    {
      "question": "Count the number of courses with more than 2 credits.",
      "query": "SELECT count(*) FROM COURSE WHERE Credits  >  2",
      "db_id": "college_3"
    },
    {
      "question": "What is the id of the organization with the maximum number of outcomes and how many outcomes are there?",
      "query": "SELECT T1.organisation_id ,  count(*) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.organisation_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "Find the name and college of students whose decisions are yes in the tryout.",
      "query": "SELECT T1.pName ,  T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes'",
      "db_id": "soccer_2"
    },
    {
      "question": "Which district has the largest population?",
      "query": "SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1",
      "db_id": "store_product"
    },
    {
      "question": "On what day was the order with invoice number 10 placed?",
      "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
      "db_id": "tracking_orders"
    },
    {
      "question": "Find the average height of the players who belong to the college called 'Yale University'.",
      "query": "SELECT avg(T1.height) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id  =  T2.player_id JOIN college AS T3 ON T3.college_id  =  T2.college_id WHERE T3.name_full  =  'Yale University';",
      "db_id": "baseball_1"
    },
    {
      "question": "Which attribute definitions have attribute value 0? Give me the attribute name and attribute ID.",
      "query": "SELECT t1.attribute_name ,  t1.attribute_id FROM Attribute_Definitions AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.attribute_id  =  t2.attribute_id WHERE t2.attribute_value  =  0",
      "db_id": "product_catalog"
    },
    {
      "question": "Find the name of customers whose credit score is below the average credit scores of all customers.",
      "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)",
      "db_id": "loan_1"
    },
    {
      "question": "How many invoices were billed from Chicago, IL?",
      "query": "SELECT COUNT(*) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
      "db_id": "store_1"
    },
    {
      "question": "What are the names of the different customers who have taken out a loan, ordered by the total amount that they have taken?",
      "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id GROUP BY T1.cust_name ORDER BY sum(T2.amount)",
      "db_id": "loan_1"
    },
    {
      "question": "What are the different ship flags, and how many ships have each?",
      "query": "SELECT count(*) ,  flag FROM ship GROUP BY flag",
      "db_id": "ship_1"
    },
    {
      "question": "What is the category and typical buying price  of the product with name \"cumin\"?",
      "query": "SELECT product_category_code ,  typical_buying_price FROM products WHERE product_name  =  \"cumin\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "What are the distinct years in which the competitions type is not \"Tournament\"?",
      "query": "SELECT DISTINCT YEAR FROM competition WHERE Competition_type != \"Tournament\"",
      "db_id": "sports_competition"
    },
    {
      "question": "Show ids for all employees with at least 100000 salary.",
      "query": "SELECT eid FROM Employee WHERE salary  >  100000",
      "db_id": "flight_1"
    },
    {
      "question": "How many colleges in total?",
      "query": "SELECT count(*) FROM College",
      "db_id": "soccer_2"
    },
    {
      "question": "What is the average number of hours spent practicing for students who got rejected?",
      "query": "SELECT avg(T1.HS) FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'no'",
      "db_id": "soccer_2"
    },
    {
      "question": "How many customers are from California?",
      "query": "SELECT count(*) FROM customers WHERE state = \"CA\";",
      "db_id": "store_1"
    },
    {
      "question": "What are the names of modern rooms that have a base price lower than $160 and two beds.",
      "query": "SELECT roomName FROM Rooms WHERE basePrice  <  160 AND beds =  2 AND decor  =  'modern';",
      "db_id": "inn_1"
    },
    {
      "question": "Which teams had more than 3 eliminations?",
      "query": "SELECT Team FROM elimination GROUP BY Team HAVING COUNT(*)  >  3",
      "db_id": "wrestler"
    },
    {
      "question": "What are the average price and score of wines for each appelation?",
      "query": "SELECT avg(Price) ,  avg(Score) ,  Appelation FROM WINE GROUP BY Appelation",
      "db_id": "wine_1"
    },
    {
      "question": "Show order ids and the number of products in each order.",
      "query": "SELECT order_id ,  count(DISTINCT product_id) FROM Order_items GROUP BY order_id",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "Find all the female members of club \"Bootup Baltimore\". Show the first name and last name.",
      "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t3.sex  =  \"F\"",
      "db_id": "club_1"
    },
    {
      "question": "Show different builders of railways, along with the corresponding number of railways using each builder.",
      "query": "SELECT Builder ,  COUNT(*) FROM railway GROUP BY Builder",
      "db_id": "railway"
    },
    {
      "question": "What are the code and description of the least frequent detention type ?",
      "query": "SELECT T1.detention_type_code ,  T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code  =  T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count(*) ASC LIMIT 1",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "List the names of aircrafts and that did not win any match.",
      "query": "SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN (SELECT Winning_Aircraft FROM MATCH)",
      "db_id": "aircraft"
    },
    {
      "question": "For each classroom report the grade that is taught in it. Report just the classroom number and the grade number.",
      "query": "SELECT DISTINCT classroom ,  grade FROM list",
      "db_id": "student_1"
    },
    {
      "question": "Show names for all employees who do not have certificate of Boeing 737-800.",
      "query": "SELECT name FROM Employee EXCEPT SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid  =  T2.eid JOIN Aircraft AS T3 ON T3.aid  =  T2.aid WHERE T3.name  =  \"Boeing 737-800\"",
      "db_id": "flight_1"
    },
    {
      "question": "What is the duration of the oldest actor?",
      "query": "SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1",
      "db_id": "musical"
    },
    {
      "question": "Find the name and id of the team that won the most times in 2008 postseason.",
      "query": "SELECT T2.name ,  T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner  =  T2.team_id_br WHERE T1.year  =  2008 GROUP BY T1.team_id_winner ORDER BY count(*) DESC LIMIT 1;",
      "db_id": "baseball_1"
    },
    {
      "question": "Show the names and total passengers for all train stations not in London.",
      "query": "SELECT name ,  total_passengers FROM station WHERE LOCATION != 'London'",
      "db_id": "train_station"
    },
    {
      "question": "Please show the most common age of editors.",
      "query": "SELECT Age FROM editor GROUP BY Age ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "journal_committee"
    },
    {
      "question": "What is the name of the activity that has the most faculty members involved in?",
      "query": "SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID  =  T2.actID GROUP BY T1.actID ORDER BY count(*) DESC LIMIT 1",
      "db_id": "activity_1"
    },
    {
      "question": "What is the id of the candidate with the lowest oppose rate?",
      "query": "SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1",
      "db_id": "candidate_poll"
    },
    {
      "question": "What is the first name and job id for all employees in the Finance department?",
      "query": "SELECT T1.first_name ,  T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id WHERE T2.department_name  =  'Finance'",
      "db_id": "hr_1"
    },
    {
      "question": "Which counties have two or more delegates? Give me the county names.",
      "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District GROUP BY T1.County_id HAVING COUNT(*)  >=  2",
      "db_id": "election"
    },
    {
      "question": "What are the apartment number and the room count of each apartment?",
      "query": "SELECT apt_number ,  room_count FROM Apartments",
      "db_id": "apartment_rentals"
    },
    {
      "question": "Find the names of all procedures which cost more than 1000 but which physician John Wen was not trained in?",
      "query": "SELECT name FROM procedures WHERE cost  >  1000 EXCEPT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
      "db_id": "hospital_1"
    },
    {
      "question": "Give the color description for the product 'catnip'.",
      "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code WHERE t1.product_name  =  \"catnip\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Please show the categories of the music festivals with count more than 1.",
      "query": "SELECT Category FROM music_festival GROUP BY Category HAVING COUNT(*)  >  1",
      "db_id": "music_4"
    },
    {
      "question": "What is the average price across all products?",
      "query": "SELECT avg(price) FROM products",
      "db_id": "manufactory_1"
    },
    {
      "question": "Show the names of phones with carrier either \"Sprint\" or \"TMobile\".",
      "query": "SELECT Name FROM phone WHERE Carrier  =  \"Sprint\" OR Carrier  =  \"TMobile\"",
      "db_id": "phone_market"
    },
    {
      "question": "What are the names of scientists who have not been assigned a project?",
      "query": "SELECT Name FROM scientists WHERE ssn NOT IN (SELECT scientist FROM AssignedTo)",
      "db_id": "scientist_1"
    },
    {
      "question": "What are the ids of all students and number of hours played?",
      "query": "SELECT Stuid ,  sum(hours_played) FROM Plays_games GROUP BY Stuid",
      "db_id": "game_1"
    },
    {
      "question": "Give me a list of all the last names of authors sorted in alphabetical order",
      "query": "SELECT lname FROM authors ORDER BY lname",
      "db_id": "icfp_1"
    },
    {
      "question": "Find the name of customers who have loans of both Mortgages and Auto.",
      "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE loan_type  =  'Auto'",
      "db_id": "loan_1"
    },
    {
      "question": "what is the average number of factories and maximum number of shops for manufacturers that opened before 1990.",
      "query": "SELECT max(num_of_shops) ,  avg(Num_of_Factories) FROM manufacturer WHERE open_year  <  1990",
      "db_id": "manufacturer"
    },
    {
      "question": "What is the title of the course with Differential Geometry as a prerequisite?",
      "query": "SELECT title FROM course WHERE course_id IN (SELECT T1.course_id FROM prereq AS T1 JOIN course AS T2 ON T1.prereq_id  =  T2.course_id WHERE T2.title  =  'Differential Geometry')",
      "db_id": "college_2"
    },
    {
      "question": "List all media types.",
      "query": "SELECT name FROM media_types;",
      "db_id": "store_1"
    },
    {
      "question": "Who performed the song named \"Le Pop\"?",
      "query": "SELECT T2.firstname ,  T2.lastname FROM Performance AS T1 JOIN Band AS T2 ON T1.bandmate  =  T2.id JOIN Songs AS T3 ON T3.SongId  =  T1.SongId WHERE T3.Title  =  \"Le Pop\"",
      "db_id": "music_2"
    },
    {
      "question": "What is the 3 most common cloud cover rates in the region of zip code 94107?",
      "query": "SELECT cloud_cover FROM weather WHERE zip_code  =  94107 GROUP BY cloud_cover ORDER BY COUNT (*) DESC LIMIT 3",
      "db_id": "bike_1"
    },
    {
      "question": "List the total points of gymnasts in descending order.",
      "query": "SELECT Total_Points FROM gymnast ORDER BY Total_Points DESC",
      "db_id": "gymnast"
    },
    {
      "question": "Show the name of drivers in descending order of age.",
      "query": "SELECT name FROM driver ORDER BY age DESC",
      "db_id": "school_bus"
    },
    {
      "question": "What is the order id and order details for the order more than two invoices.",
      "query": "SELECT T2.order_id ,  T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id  =  T2.order_id GROUP BY T2.order_id HAVING count(*)  >  2",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "Find the number of different airports which are the destinations of the American Airlines.",
      "query": "SELECT count(DISTINCT dst_apid) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
      "db_id": "flight_4"
    },
    {
      "question": "What are the names and number of hours spent training for each player who trains for less than 1500 hours?",
      "query": "SELECT pName ,  HS FROM Player WHERE HS  <  1500",
      "db_id": "soccer_2"
    },
    {
      "question": "List the names of shops that have no devices in stock.",
      "query": "SELECT Shop_Name FROM shop WHERE Shop_ID NOT IN (SELECT Shop_ID FROM stock)",
      "db_id": "device"
    },
    {
      "question": "List the names of members in ascending alphabetical order.",
      "query": "SELECT Name FROM member ORDER BY Name ASC",
      "db_id": "decoration_competition"
    },
    {
      "question": "Which game type has most number of games?",
      "query": "SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count(*) DESC LIMIT 1",
      "db_id": "game_1"
    },
    {
      "question": "What is the name of the body builder with the greatest body weight?",
      "query": "SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID ORDER BY T2.Weight DESC LIMIT 1",
      "db_id": "body_builder"
    },
    {
      "question": "list the names of the companies with more than 200 sales in the descending order of sales and profits.",
      "query": "SELECT name FROM company WHERE Sales_in_Billion  >  200 ORDER BY Sales_in_Billion ,  Profits_in_Billion DESC",
      "db_id": "company_employee"
    },
    {
      "question": "Return the positions of players on the team Ryley Goldner.",
      "query": "SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team  =  T2.Team_id WHERE T2.Name  =  \"Ryley Goldner\"",
      "db_id": "match_season"
    },
    {
      "question": "Return the names and typical buying prices for all products.",
      "query": "SELECT product_name ,  typical_buying_price FROM products",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "List the distinct positions of pilots older than 30.",
      "query": "SELECT DISTINCT POSITION FROM pilot WHERE Age  >  30",
      "db_id": "pilot_record"
    },
    {
      "question": "How many products have prices of at least 180?",
      "query": "SELECT count(*) FROM products WHERE price >= 180",
      "db_id": "manufactory_1"
    },
    {
      "question": "List all the distinct cities",
      "query": "SELECT DISTINCT city FROM addresses",
      "db_id": "customers_and_addresses"
    },
    {
      "question": "Show all destinations and the number of flights to each destination.",
      "query": "SELECT destination ,  count(*) FROM Flight GROUP BY destination",
      "db_id": "flight_1"
    },
    {
      "question": "Find all types of store and number of them.",
      "query": "SELECT TYPE ,  count(*) FROM store GROUP BY TYPE",
      "db_id": "store_product"
    },
    {
      "question": "What is the full name and id of the customer who has the lowest total amount of payment?",
      "query": "SELECT T1.first_name ,  T1.last_name ,  T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY sum(amount) ASC LIMIT 1",
      "db_id": "sakila_1"
    },
    {
      "question": "Show the nicknames of schools that are not in division 1.",
      "query": "SELECT Nickname FROM school_details WHERE Division != \"Division 1\"",
      "db_id": "school_player"
    },
    {
      "question": "What is the count of different game types?",
      "query": "SELECT count(DISTINCT gtype) FROM Video_games",
      "db_id": "game_1"
    },
    {
      "question": "What are the names of customers with credit score less than the average credit score across customers?",
      "query": "SELECT cust_name FROM customer WHERE credit_score  <  (SELECT avg(credit_score) FROM customer)",
      "db_id": "loan_1"
    },
    {
      "question": "What campus had more than 400 total enrollment but more than 200 full time enrollment in year 1956?",
      "query": "SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id  =  t2.campus WHERE t2.year  =  1956 AND totalenrollment_ay  >  400 AND FTE_AY  >  200",
      "db_id": "csu_1"
    },
    {
      "question": "What are the types and countries of competitions?",
      "query": "SELECT Competition_type ,  Country FROM competition",
      "db_id": "sports_competition"
    },
    {
      "question": "What are the different pilot names who had piloted a flight in the country 'United States' or in the airport named 'Billund Airport'?",
      "query": "SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id  =  T2.airport_id WHERE T1.country  =  'United States' OR T1.name  =  'Billund Airport'",
      "db_id": "flight_company"
    },
    {
      "question": "What is the average number of customers across banks in the state of Utah?",
      "query": "SELECT avg(no_of_customers) FROM bank WHERE state  =  'Utah'",
      "db_id": "loan_1"
    },
    {
      "question": "Show the institution type with the largest number of institutions.",
      "query": "SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
      "db_id": "protein_institute"
    },
    {
      "question": "What is the campus fee of \"San Jose State University\" in year 1996?",
      "query": "SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND T2.year  =  1996",
      "db_id": "csu_1"
    },
    {
      "question": "How many courses do the student whose id is 171 attend?",
      "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
      "db_id": "student_assessment"
    },
    {
      "question": "What is the location shared by most counties?",
      "query": "SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "county_public_safety"
    },
    {
      "question": "Find the id and forenames of drivers who participated both the races with name Australian Grand Prix and the races with name Chinese Grand Prix?",
      "query": "SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Australian Grand Prix\" INTERSECT SELECT T2.driverid ,  T3.forename FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid JOIN drivers AS T3 ON T2.driverid  =  T3.driverid WHERE T1.name = \"Chinese Grand Prix\"",
      "db_id": "formula_1"
    },
    {
      "question": "Count the number of schools that have had basketball matches.",
      "query": "SELECT count(DISTINCT school_id) FROM basketball_match",
      "db_id": "university_basketball"
    },
    {
      "question": "Find the female friends of Alice.",
      "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T2.name  =  'Alice' AND T1.gender  =  'female'",
      "db_id": "network_2"
    },
    {
      "question": "Find the name of the user who has the largest number of followers.",
      "query": "SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1",
      "db_id": "twitter_1"
    },
    {
      "question": "Find the checking balance and saving balance in the Brown\u2019s account.",
      "query": "SELECT T2.balance ,  T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid JOIN savings AS T3 ON T1.custid  =  T3.custid WHERE T1.name  =  'Brown'",
      "db_id": "small_bank_1"
    },
    {
      "question": "What is the least common faculty rank?",
      "query": "SELECT Rank FROM FACULTY GROUP BY Rank ORDER BY count(*) ASC LIMIT 1",
      "db_id": "college_3"
    },
    {
      "question": "List the locations of schools in ascending order of enrollment.",
      "query": "SELECT LOCATION FROM school ORDER BY Enrollment ASC",
      "db_id": "school_player"
    },
    {
      "question": "Find the number of different cities which banks are located at.",
      "query": "SELECT count(DISTINCT city) FROM bank",
      "db_id": "loan_1"
    },
    {
      "question": "How many females does this network has?",
      "query": "SELECT count(*) FROM Person WHERE gender  =  'female'",
      "db_id": "network_2"
    },
    {
      "question": "List the names of people that have not been on the affirmative side of debates.",
      "query": "SELECT Name FROM people WHERE People_id NOT IN (SELECT Affirmative FROM debate_people)",
      "db_id": "debate"
    },
    {
      "question": "For each room, find its name and the number of times reservations were made for it.",
      "query": "SELECT T2.roomName ,  count(*) ,  T1.Room FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId GROUP BY T1.Room",
      "db_id": "inn_1"
    },
    {
      "question": "Return the top 3 greatest support rates.",
      "query": "SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3",
      "db_id": "candidate_poll"
    },
    {
      "question": "What are all the movies rated as R? List the titles.",
      "query": "SELECT title FROM film WHERE rating  =  'R'",
      "db_id": "sakila_1"
    },
    {
      "question": "For each country and airline name, how many routes are there?",
      "query": "SELECT T1.country ,  T1.name ,  count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid GROUP BY T1.country ,  T1.name",
      "db_id": "flight_4"
    },
    {
      "question": "List the names of technicians in ascending order of age.",
      "query": "SELECT Name FROM technician ORDER BY Age ASC",
      "db_id": "machine_repair"
    },
    {
      "question": "For each submission, find its author and acceptance result.",
      "query": "SELECT T2.Author ,  T1.Result FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID  =  T2.Submission_ID",
      "db_id": "workshop_paper"
    },
    {
      "question": "Find the name of dorms that do not have any amenity",
      "query": "SELECT dorm_name FROM dorm WHERE dormid NOT IN (SELECT dormid FROM has_amenity)",
      "db_id": "dorm_1"
    },
    {
      "question": "Find the name of songs that does not have a back vocal.",
      "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"",
      "db_id": "music_2"
    },
    {
      "question": "Find the names of instructors who didn't each any courses in any Spring semester.",
      "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches WHERE semester  =  'Spring')",
      "db_id": "college_2"
    },
    {
      "question": "find the total percentage share of all channels owned by CCTV.",
      "query": "SELECT sum(Share_in_percent) FROM channel WHERE OWNER  =  'CCTV'",
      "db_id": "program_share"
    },
    {
      "question": "list in alphabetic order all course names and their instructors' names in year 2008.",
      "query": "SELECT T1.title ,  T3.name FROM course AS T1 JOIN teaches AS T2 ON T1.course_id  =  T2.course_id JOIN instructor AS T3 ON T2.id  =  T3.id WHERE YEAR  =  2008 ORDER BY T1.title",
      "db_id": "college_2"
    },
    {
      "question": "What are the maximum and minimum number of cows across all farms.",
      "query": "SELECT max(Cows) ,  min(Cows) FROM farm",
      "db_id": "farm"
    },
    {
      "question": "Who are the friends of Bob?",
      "query": "SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T1.name  =  'Bob'",
      "db_id": "network_2"
    },
    {
      "question": "Find the name and gender type of the dorms whose capacity is greater than 300 or less than 100.",
      "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100",
      "db_id": "dorm_1"
    },
    {
      "question": "What are the maximum and minimum number of silver medals for clubs.",
      "query": "SELECT max(Silver) ,  min(Silver) FROM club_rank",
      "db_id": "sports_competition"
    },
    {
      "question": "How many films have the word 'Dummy' in their titles?",
      "query": "SELECT count(*) FROM film WHERE title LIKE \"%Dummy%\"",
      "db_id": "cinema"
    },
    {
      "question": "What are the the full names and ids for all customers, and how many accounts does each have?",
      "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name ,  count(*) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "What are the first name, last name and id of the player with the most all star game experiences? Also list the count.",
      "query": "SELECT T1.name_first , T1.name_last ,  T1.player_id ,   count(*) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 1;",
      "db_id": "baseball_1"
    },
    {
      "question": "List the name of technicians whose team is not \"NYY\".",
      "query": "SELECT Name FROM technician WHERE Team != \"NYY\"",
      "db_id": "machine_repair"
    },
    {
      "question": "Show the names and ids of tourist attractions that are visited at most once.",
      "query": "SELECT T1.Name ,  T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count(*)  <=  1",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "What are the names of students who took a course in the Fall of 2003?",
      "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)",
      "db_id": "college_2"
    },
    {
      "question": "What is the last name of the author that has published the most papers?",
      "query": "SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid GROUP BY t1.fname ,  t1.lname ORDER BY count(*) DESC LIMIT 1",
      "db_id": "icfp_1"
    },
    {
      "question": "Which product's detail contains the word \"Latte\" or \"Americano\"? Return the full detail.",
      "query": "SELECT product_details FROM products WHERE product_details LIKE \"%Latte%\" OR product_details LIKE \"%Americano%\"",
      "db_id": "customers_and_addresses"
    },
    {
      "question": "What are the number of international and domestic passengers of the airport named London \"Heathrow\"?",
      "query": "SELECT International_Passengers ,  Domestic_Passengers FROM airport WHERE Airport_Name  =  \"London Heathrow\"",
      "db_id": "aircraft"
    },
    {
      "question": "What is the status code, mobile phone number and email address of customer with last name as Kohler or first name as Marina?",
      "query": "SELECT customer_status_code ,  cell_mobile_phone_number ,  email_address FROM Customers WHERE first_name = \"Marina\" OR last_name  =  \"Kohler\"",
      "db_id": "driving_school"
    },
    {
      "question": "Find the name of the customers who have at most two orders.",
      "query": "SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count(*)  <=  2",
      "db_id": "tracking_orders"
    },
    {
      "question": "List all club names in descending alphabetical order.",
      "query": "SELECT name FROM club ORDER BY name DESC",
      "db_id": "sports_competition"
    },
    {
      "question": "When do all the researcher role staff start to work, and when do they stop working?",
      "query": "SELECT date_from ,  date_to FROM Project_Staff WHERE role_code  =  'researcher'",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "What is the most common result of the music festival?",
      "query": "SELECT RESULT FROM music_festival GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "music_4"
    },
    {
      "question": "What are the district names and city populations for all districts that between 200,000 and 2,000,000 residents?",
      "query": "SELECT District_name ,  City_Population FROM district WHERE City_Population BETWEEN 200000 AND 2000000",
      "db_id": "store_product"
    },
    {
      "question": "what is the name of every pilot who is at least 25 years old?",
      "query": "SELECT Name FROM pilot WHERE Age  >=  25",
      "db_id": "aircraft"
    },
    {
      "question": "List the names of all the physicians who prescribe Thesisin as medication.",
      "query": "SELECT DISTINCT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.name  =  \"Thesisin\"",
      "db_id": "hospital_1"
    },
    {
      "question": "What is the first and last name of the faculty participating in the most activities?",
      "query": "SELECT  T1.fname ,  T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID GROUP BY T1.FacID ORDER BY count(*) DESC LIMIT 1",
      "db_id": "activity_1"
    },
    {
      "question": "Show the name and description of the role played by the employee named Ebba.",
      "query": "SELECT T2.role_name ,  T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code  =  T2.role_code WHERE T1.employee_name  =  \"Ebba\"",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "Which 3 players won the most player awards? List their full name and id.",
      "query": "SELECT T1.name_first ,  T1.name_last ,  T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id  =  T2.player_id GROUP BY T1.player_id ORDER BY count(*) DESC LIMIT 3;",
      "db_id": "baseball_1"
    },
    {
      "question": "Show the tourist attractions visited by the tourist whose detail is 'Vincent'.",
      "query": "SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID  =  T2.Tourist_Attraction_ID JOIN VISITORS AS T3 ON T2.Tourist_ID  =  T3.Tourist_ID WHERE T3.Tourist_Details  =  \"Vincent\"",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "Show all video game types and the number of video games in each type.",
      "query": "SELECT gtype ,  count(*) FROM Video_games GROUP BY gtype",
      "db_id": "game_1"
    },
    {
      "question": "What are the countries for appelations with at most 3 wines?",
      "query": "SELECT T1.County FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING count(*)  <=  3",
      "db_id": "wine_1"
    },
    {
      "question": "Show total hours per week and number of games played for student David Shieber.",
      "query": "SELECT sum(hoursperweek) ,  sum(gamesplayed) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID  =  T2.StuID WHERE T2.Fname  =  \"David\" AND T2.Lname  =  \"Shieber\"",
      "db_id": "game_1"
    },
    {
      "question": "Which state has the greatest total number of bank customers?",
      "query": "SELECT state FROM bank GROUP BY state ORDER BY sum(no_of_customers) DESC LIMIT 1",
      "db_id": "loan_1"
    },
    {
      "question": "List the open date of open year of the shop named \"Apple\".",
      "query": "SELECT Open_Date ,  Open_Year FROM shop WHERE Shop_Name  =  \"Apple\"",
      "db_id": "device"
    },
    {
      "question": "What are the titles and ids for albums containing tracks with unit price greater than 1?",
      "query": "SELECT T1.Title ,  T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId  =  T2.AlbumId WHERE T2.UnitPrice  >  1 GROUP BY T2.AlbumID",
      "db_id": "chinook_1"
    },
    {
      "question": "Show all investor details.",
      "query": "SELECT Investor_details FROM INVESTORS",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "Return the names of products in the category 'Spices'.",
      "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Find out the send dates of the documents with the grant amount of more than 5000 were granted by organisation type described",
      "query": "SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id  =  T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id  =  T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type  =  T4.organisation_type WHERE T2.grant_amount  >  5000 AND T4.organisation_type_description  =  'Research'",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "What are the titles and authors or editors that correspond to books made after 1989?",
      "query": "SELECT book_title ,  author_or_editor FROM book_club WHERE YEAR  >  1989",
      "db_id": "culture_company"
    },
    {
      "question": "How many professors who are from either Accounting or Biology department?",
      "query": "SELECT count(*) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code  =  T2.dept_code WHERE T2.dept_name  =  'Accounting' OR T2.dept_name  =  'Biology'",
      "db_id": "college_1"
    },
    {
      "question": "What is the name, city, and country of the airport with the highest elevation?",
      "query": "SELECT name ,  city ,  country FROM airports ORDER BY elevation DESC LIMIT 1",
      "db_id": "flight_4"
    },
    {
      "question": "Return the names and ids of all products whose price is between 600 and 700.",
      "query": "SELECT product_name ,  product_id FROM products WHERE product_price BETWEEN 600 AND 700",
      "db_id": "department_store"
    },
    {
      "question": "List the hardware model name for the phons that were produced by \"Nokia Corporation\" but whose screen mode type is not Text.",
      "query": "SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name  =  \"Nokia Corporation\" AND T1.Type != \"Text\";",
      "db_id": "phone_1"
    },
    {
      "question": "Please show the employee first names and ids of employees who serve at least 10 customers.",
      "query": "SELECT T1.FirstName ,  T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId  =  T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT(*)  >=  10",
      "db_id": "chinook_1"
    },
    {
      "question": "Show all document type codes, document type names, document type descriptions.",
      "query": "SELECT document_type_code ,  document_type_name ,  document_type_description FROM Ref_document_types",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "How many students did not have any course enrollment?",
      "query": "SELECT count(*) FROM Students WHERE student_id NOT IN (SELECT student_id FROM Student_Course_Enrolment)",
      "db_id": "e_learning"
    },
    {
      "question": "How many ships are there?",
      "query": "SELECT count(*) FROM ship",
      "db_id": "ship_mission"
    },
    {
      "question": "Find the ids and names of members who are under age 30 or with black membership card.",
      "query": "SELECT name ,  member_id FROM member WHERE Membership_card  =  'Black' OR age  <  30",
      "db_id": "coffee_shop"
    },
    {
      "question": "What are the names, ages, and jobs of all people who are friends with Alice for the longest amount of time?",
      "query": "SELECT T1.name ,  T1.age ,  T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend =  'Alice' AND T2.year  =  (SELECT max(YEAR) FROM PersonFriend WHERE friend =  'Alice')",
      "db_id": "network_2"
    },
    {
      "question": "Find the names of the buildings in \"on-hold\" status, and sort them in ascending order of building stories.",
      "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC",
      "db_id": "company_office"
    },
    {
      "question": "How many distinct official languages are there among countries of players whose positions are defenders.",
      "query": "SELECT count(DISTINCT T1.Official_native_language) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id  =  T2.Country WHERE T2.Position  =  \"Defender\"",
      "db_id": "match_season"
    },
    {
      "question": "Show the station name with at least two trains.",
      "query": "SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id GROUP BY T1.station_id HAVING count(*)  >=  2",
      "db_id": "train_station"
    },
    {
      "question": "what is the GDP of the city with the largest population.",
      "query": "SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1",
      "db_id": "city_record"
    },
    {
      "question": "Show names of pilots that have more than one record.",
      "query": "SELECT T2.Pilot_name ,  COUNT(*) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID  =  T2.pilot_ID GROUP BY T2.Pilot_name HAVING COUNT(*)  >  1",
      "db_id": "pilot_record"
    },
    {
      "question": "In which locations are there more than one movie theater with capacity above 300?",
      "query": "SELECT LOCATION FROM cinema WHERE capacity  >  300 GROUP BY LOCATION HAVING count(*)  >  1",
      "db_id": "cinema"
    },
    {
      "question": "Find the average and oldest age for students with different sex.",
      "query": "SELECT avg(age) ,  max(age) ,  sex FROM student GROUP BY sex",
      "db_id": "dorm_1"
    },
    {
      "question": "Show the delegate from district 1 in election.",
      "query": "SELECT Delegate FROM election WHERE District  =  1",
      "db_id": "election"
    },
    {
      "question": "What is the count and code of the job with the most employee?",
      "query": "SELECT emp_jobcode ,  count(*) FROM employee GROUP BY emp_jobcode ORDER BY count(*) DESC LIMIT 1",
      "db_id": "college_1"
    },
    {
      "question": "Return the poll source corresponding to the candidate who has the oppose rate.",
      "query": "SELECT poll_source FROM candidate ORDER BY oppose_rate DESC LIMIT 1",
      "db_id": "candidate_poll"
    },
    {
      "question": "Show the most common college of authors of submissions.",
      "query": "SELECT College FROM submission GROUP BY College ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "workshop_paper"
    },
    {
      "question": "Find the club which has the largest number of members majoring in \"600\".",
      "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.major  =  \"600\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",
      "db_id": "club_1"
    },
    {
      "question": "Which papers have the substring \"Database\" in their titles? Show the titles of the papers.",
      "query": "SELECT title FROM papers WHERE title LIKE \"%Database%\"",
      "db_id": "icfp_1"
    },
    {
      "question": "Find the first names of all professors in the Accounting department who is teaching some course and the class room.",
      "query": "SELECT T2.emp_fname ,  T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Accounting'",
      "db_id": "college_1"
    },
    {
      "question": "Show the most common country across members.",
      "query": "SELECT Country FROM member GROUP BY Country ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "decoration_competition"
    },
    {
      "question": "List all company names with a book published by Alyson.",
      "query": "SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id  =  T2.book_club_id WHERE T2.publisher  =  'Alyson'",
      "db_id": "culture_company"
    },
    {
      "question": "Find the description of the claim status \"Open\".",
      "query": "SELECT claim_status_description FROM claims_processing_stages WHERE claim_status_name  =  \"Open\"",
      "db_id": "insurance_and_eClaims"
    },
    {
      "question": "What are the unique types of player positions in the tryout?",
      "query": "SELECT count(DISTINCT pPos) FROM tryout",
      "db_id": "soccer_2"
    },
    {
      "question": "Who are the customers that had more than 1 policy? List the customer details and id.",
      "query": "SELECT T1.customer_details ,  T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id  =  T2.Customer_id GROUP BY T1.customer_id HAVING count(*)  >  1",
      "db_id": "insurance_policies"
    },
    {
      "question": "Find the subject ID, subject name, and the corresponding number of available courses for each subject.",
      "query": "SELECT T1.subject_id ,  T2.subject_name ,  COUNT(*) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id  =  T2.subject_id GROUP BY T1.subject_id",
      "db_id": "e_learning"
    },
    {
      "question": "What are the bed type and name of all the rooms with traditional decor?",
      "query": "SELECT roomName ,  bedType FROM Rooms WHERE decor = \"traditional\";",
      "db_id": "inn_1"
    },
    {
      "question": "What is ids of the songs whose resolution is higher than the average resolution of songs in modern genre?",
      "query": "SELECT f_id FROM song WHERE resolution  >  (SELECT avg(resolution) FROM song WHERE genre_is  =  \"modern\")",
      "db_id": "music_1"
    },
    {
      "question": "Count the number of different positions in the club \"Bootup Baltimore\".",
      "query": "SELECT count(DISTINCT t2.position) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid WHERE t1.clubname  =  \"Bootup Baltimore\"",
      "db_id": "club_1"
    },
    {
      "question": "What are the birth dates of employees living in Edmonton?",
      "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
      "db_id": "chinook_1"
    },
    {
      "question": "Who is the person whose age is below 30?",
      "query": "SELECT name FROM Person WHERE age  <  30",
      "db_id": "network_2"
    },
    {
      "question": "In which city do the most employees live and how many of them live there?",
      "query": "SELECT T1.city ,  count(*) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count(*) DESC LIMIT 1;",
      "db_id": "driving_school"
    },
    {
      "question": "List all the subject names.",
      "query": "SELECT subject_name FROM SUBJECTS",
      "db_id": "e_learning"
    },
    {
      "question": "What is the first name, last name, and phone of the customer with card 4560596484842.",
      "query": "SELECT T2.customer_first_name ,  T2.customer_last_name ,  T2.customer_phone FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.card_number  =  \"4560596484842\"",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "What is title of album which track Balls to the Wall belongs to?",
      "query": "SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = \"Balls to the Wall\";",
      "db_id": "store_1"
    },
    {
      "question": "Show the order ids and the number of items in each order.",
      "query": "SELECT order_id ,  count(*) FROM Order_items GROUP BY order_id",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "Find the name of instructors who didn't teach any courses?",
      "query": "SELECT name FROM instructor WHERE id NOT IN (SELECT id FROM teaches)",
      "db_id": "college_2"
    },
    {
      "question": "List the name of the colleges whose enrollment is greater 18000 sorted by the college's name.",
      "query": "SELECT cName FROM College WHERE enr  >  18000 ORDER BY cName",
      "db_id": "soccer_2"
    },
    {
      "question": "Count the number of distinct governors.",
      "query": "SELECT count(DISTINCT Governor) FROM party",
      "db_id": "election"
    },
    {
      "question": "What is the id of the instructor who advises of all students from History department?",
      "query": "SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id  =  T2.id WHERE T2.dept_name  =  'History'",
      "db_id": "college_2"
    },
    {
      "question": "What is the email of the student with first name \"Emma\" and last name \"Rohan\"?",
      "query": "SELECT email_address FROM Students WHERE first_name  =  \"Emma\" AND last_name  =  \"Rohan\"",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "For each race name, What is the maximum fastest lap speed for races after 2004 ordered by year?",
      "query": "SELECT max(T2.fastestlapspeed) ,  T1.name ,  T1.year FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year > 2014 GROUP BY T1.name ORDER BY T1.year",
      "db_id": "formula_1"
    },
    {
      "question": "Show the name and opening year for three churches that opened most recently.",
      "query": "SELECT name ,  open_date FROM church ORDER BY open_date DESC LIMIT 3",
      "db_id": "wedding"
    },
    {
      "question": "What is the id and family name of the driver who has the longest laptime?",
      "query": "SELECT T1.driverid ,  T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1",
      "db_id": "formula_1"
    },
    {
      "question": "List the name of actors whose age is not 20.",
      "query": "SELECT Name FROM actor WHERE Age != 20",
      "db_id": "musical"
    },
    {
      "question": "What is the average weight of all players?",
      "query": "SELECT avg(weight) FROM Player",
      "db_id": "soccer_1"
    },
    {
      "question": "Show all member names and registered branch names sorted by register year.",
      "query": "SELECT T3.name ,  T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id ORDER BY T1.register_year",
      "db_id": "shop_membership"
    },
    {
      "question": "How many king beds are there?",
      "query": "SELECT sum(beds) FROM Rooms WHERE bedtype  =  'King';",
      "db_id": "inn_1"
    },
    {
      "question": "Find products with max page size as \"A4\" or pages per minute color smaller than 5.",
      "query": "SELECT product FROM product WHERE max_page_size  =  \"A4\" OR pages_per_minute_color  <  5",
      "db_id": "store_product"
    },
    {
      "question": "Find the names of all artists that have \"a\" in their names.",
      "query": "SELECT Name FROM ARTIST WHERE Name LIKE \"%a%\"",
      "db_id": "chinook_1"
    },
    {
      "question": "What is the name and salary of the employee with the id 242518965?",
      "query": "SELECT name ,  salary FROM Employee WHERE eid  =  242518965",
      "db_id": "flight_1"
    },
    {
      "question": "Which allergy type is most common?",
      "query": "SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count(*) DESC LIMIT 1",
      "db_id": "allergy_1"
    },
    {
      "question": "Show the location with most number of train stations.",
      "query": "SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count(*) DESC LIMIT 1",
      "db_id": "train_station"
    },
    {
      "question": "Count the number of characteristics of the 'flax' product.",
      "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"flax\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Find the first name and last name and department id for those employees who earn such amount of salary which is the smallest salary of any of the departments.",
      "query": "SELECT first_name ,  last_name ,  department_id FROM employees WHERE salary IN (SELECT MIN(salary) FROM employees GROUP BY department_id)",
      "db_id": "hr_1"
    },
    {
      "question": "What is the cmi cross reference id that is related to at least one council tax entry? List the cross reference id and source system code.",
      "query": "SELECT T1.cmi_cross_ref_id ,  T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id  =  T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count(*)  >=  1",
      "db_id": "local_govt_mdm"
    },
    {
      "question": "Show the 3 counties with the smallest population.",
      "query": "SELECT County_name FROM county ORDER BY Population ASC LIMIT 3",
      "db_id": "election"
    },
    {
      "question": "How many distinct locations have the things with service detail 'Unsatisfied' been located in?",
      "query": "SELECT count(DISTINCT T2.Location_Code) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id  =  T2.thing_id WHERE T1.service_details  =  'Unsatisfied'",
      "db_id": "local_govt_and_lot"
    },
    {
      "question": "Find the names of the artists who are from UK and have produced English songs.",
      "query": "SELECT artist_name FROM artist WHERE country  =  \"UK\" INTERSECT SELECT artist_name FROM song WHERE languages  =  \"english\"",
      "db_id": "music_1"
    },
    {
      "question": "Show the maximum share count of transactions where the amount is smaller than 10000",
      "query": "SELECT max(share_count) FROM TRANSACTIONS WHERE amount_of_transaction  <  10000",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "Return the name, phone number and email address for the customer with the most orders.",
      "query": "SELECT T1.customer_name ,  T1.customer_phone ,  T1.customer_email FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T2.customer_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "department_store"
    },
    {
      "question": "List the all the distinct names of the products with the characteristic name 'warm'.",
      "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t3.characteristic_name  =  \"warm\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Find the title of course that is provided by both Statistics and Psychology departments.",
      "query": "SELECT title FROM course WHERE dept_name  =  'Statistics' INTERSECT SELECT title FROM course WHERE dept_name  =  'Psychology'",
      "db_id": "college_2"
    },
    {
      "question": "Find the names of bank branches that have provided a loan to any customer whose credit score is below 100.",
      "query": "SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id  =  T2.branch_id JOIN customer AS T3 ON T1.cust_id  =  T3.cust_id WHERE T3.credit_score  <  100",
      "db_id": "loan_1"
    },
    {
      "question": "How many courses does the student with id 171 actually attend?",
      "query": "SELECT count(*) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171",
      "db_id": "student_assessment"
    },
    {
      "question": "How many degrees were conferred in \"San Jose State University\" in 2000?",
      "query": "SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id  =  t2.campus WHERE t1.campus  =  \"San Jose State University\" AND t2.year  =  2000",
      "db_id": "csu_1"
    },
    {
      "question": "For each denomination, return the denomination and the count of schools with that denomination.",
      "query": "SELECT Denomination ,  COUNT(*) FROM school GROUP BY Denomination",
      "db_id": "school_player"
    },
    {
      "question": "What is the average enrollment of schools?",
      "query": "SELECT avg(Enrollment) FROM school",
      "db_id": "school_player"
    },
    {
      "question": "Report the name of all campuses in Los Angeles county.",
      "query": "SELECT campus FROM campuses WHERE county  =  \"Los Angeles\"",
      "db_id": "csu_1"
    },
    {
      "question": "What are the first names of the professors who do not play Canoeing or Kayaking as activities?",
      "query": "SELECT lname FROM faculty WHERE rank  =  'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID  =  T2.facID JOIN activity AS T3 ON T2.actid  =  T2.actid WHERE T3.activity_name  =  'Canoeing' OR T3.activity_name  =  'Kayaking'",
      "db_id": "activity_1"
    },
    {
      "question": "What is the first name and age of every student who lives in a dorm with a TV Lounge?",
      "query": "SELECT T1.fname ,  T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid WHERE T2.dormid NOT IN (SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid  =  T4.amenid WHERE T4.amenity_name  =  'TV Lounge')",
      "db_id": "dorm_1"
    },
    {
      "question": "What are the room name and base price of the room with the lowest base price?",
      "query": "SELECT roomName ,  basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;",
      "db_id": "inn_1"
    },
    {
      "question": "What is the name of school that has the smallest enrollment in each state?",
      "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state",
      "db_id": "soccer_2"
    },
    {
      "question": "What are the locations and representatives' names of the gas stations owned by the companies with the 3 largest amounts of assets?",
      "query": "SELECT T3.location ,  T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3",
      "db_id": "gas_company"
    },
    {
      "question": "What is the average attendance of stadiums with capacity percentage higher than 100%?",
      "query": "SELECT average_attendance FROM stadium WHERE capacity_percentage  >  100",
      "db_id": "game_injury"
    },
    {
      "question": "Find the id of the order whose shipment tracking number is \"3452\".",
      "query": "SELECT order_id FROM shipments WHERE shipment_tracking_number = \"3452\"",
      "db_id": "tracking_orders"
    },
    {
      "question": "Show the account id with most number of transactions.",
      "query": "SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "What are the different states that had students successfully try out?",
      "query": "SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.decision  =  'yes'",
      "db_id": "soccer_2"
    },
    {
      "question": "Which park did the most people attend in 2008?",
      "query": "SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;",
      "db_id": "baseball_1"
    },
    {
      "question": "What are the names of players whose training hours is between 500 and 1500?",
      "query": "SELECT pName FROM Player WHERE HS BETWEEN 500 AND 1500",
      "db_id": "soccer_2"
    },
    {
      "question": "How many parks are there in the state of NY?",
      "query": "SELECT count(*) FROM park WHERE state  =  'NY';",
      "db_id": "baseball_1"
    },
    {
      "question": "What are the full name, hire data, salary and department id for employees without the letter M in their first name, ordered by ascending department id?",
      "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
      "db_id": "hr_1"
    },
    {
      "question": "Show the movie titles and book titles for all companies in China.",
      "query": "SELECT T1.title ,  T3.book_title FROM movie AS T1 JOIN culture_company AS T2 ON T1.movie_id  =  T2.movie_id JOIN book_club AS T3 ON T3.book_club_id  =  T2.book_club_id WHERE T2.incorporated_in  =  'China'",
      "db_id": "culture_company"
    },
    {
      "question": "Find the distinct years when the governor was named \"Eliot Spitzer\".",
      "query": "SELECT DISTINCT YEAR FROM party WHERE Governor  =  \"Eliot Spitzer\"",
      "db_id": "election"
    },
    {
      "question": "Where us the club named \"Tennis Club\" located?",
      "query": "SELECT clublocation FROM club WHERE clubname  =  \"Tennis Club\"",
      "db_id": "club_1"
    },
    {
      "question": "List the names of all distinct races in reversed  lexicographic order?",
      "query": "SELECT DISTINCT name FROM races ORDER BY name DESC",
      "db_id": "formula_1"
    },
    {
      "question": "What is the average song rating for each language?",
      "query": "SELECT avg(rating) ,  languages FROM song GROUP BY languages",
      "db_id": "music_1"
    },
    {
      "question": "What is the number of professors for different school?",
      "query": "SELECT count(*) ,  T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code  =  T2.dept_code GROUP BY T1.school_code",
      "db_id": "college_1"
    },
    {
      "question": "List all employees in the circulation history of the document with id 1. List the employee's name.",
      "query": "SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;",
      "db_id": "cre_Doc_Control_Systems"
    },
    {
      "question": "How many different countries are all the swimmers from?",
      "query": "SELECT count(DISTINCT nationality) FROM swimmer",
      "db_id": "swimming"
    },
    {
      "question": "Find the names of departments that are either in division AS or in division EN and in Building NEB.",
      "query": "SELECT DName FROM DEPARTMENT WHERE Division  =  \"AS\" UNION SELECT DName FROM DEPARTMENT WHERE Division  =  \"EN\" AND Building  =  \"NEB\"",
      "db_id": "college_3"
    },
    {
      "question": "Find the classrooms in which grade 4 is studying.",
      "query": "SELECT DISTINCT classroom FROM list WHERE grade  =  4",
      "db_id": "student_1"
    },
    {
      "question": "Find the number of times ROY SWEAZY has reserved a room.",
      "query": "SELECT count(*) FROM Reservations WHERE FirstName = \"ROY\" AND LastName  =  \"SWEAZY\";",
      "db_id": "inn_1"
    },
    {
      "question": "Show all locations where a gas station for company with market value greater than 100 is located.",
      "query": "SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id  =  T2.company_id JOIN gas_station AS T3 ON T1.station_id  =  T3.station_id WHERE T2.market_value  >  100",
      "db_id": "gas_company"
    },
    {
      "question": "How many different cities do have some airport in the country of Greenland?",
      "query": "SELECT count(DISTINCT city) FROM airports WHERE country  =  'Greenland'",
      "db_id": "flight_4"
    },
    {
      "question": "For each injury accident, find the date of the game and the name of the injured player in the game, and sort the results in descending order of game season.",
      "query": "SELECT T1.date ,  T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id  =  T2.game_id ORDER BY T1.season DESC",
      "db_id": "game_injury"
    },
    {
      "question": "Find the title of courses that have two prerequisites?",
      "query": "SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id  =  T2.course_id GROUP BY T2.course_id HAVING count(*)  =  2",
      "db_id": "college_2"
    },
    {
      "question": "List the types of competition and the number of competitions of each type.",
      "query": "SELECT Competition_type ,  COUNT(*) FROM competition GROUP BY Competition_type",
      "db_id": "sports_competition"
    },
    {
      "question": "How many games has each stadium held?",
      "query": "SELECT T1.id ,  count(*) FROM stadium AS T1 JOIN game AS T2 ON T1.id  =  T2.stadium_id GROUP BY T1.id",
      "db_id": "game_injury"
    },
    {
      "question": "Find the names of users whose emails contain \u2018superstar\u2019 or \u2018edu\u2019.",
      "query": "SELECT name FROM user_profiles WHERE email LIKE '%superstar%' OR email LIKE '%edu%'",
      "db_id": "twitter_1"
    },
    {
      "question": "What is the total budget amount for school \"Glenn\" in all years?",
      "query": "SELECT sum(T1.budgeted) FROM budget AS T1 JOIN school AS T2 ON T1.school_id  =  T2.school_id WHERE T2.school_name  =  'Glenn'",
      "db_id": "school_finance"
    },
    {
      "question": "What is the id of the product that was ordered the most often?",
      "query": "SELECT product_id FROM order_items GROUP BY product_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "department_store"
    },
    {
      "question": "Who has friends that are older than the average age? Print their friends and their ages as well",
      "query": "SELECT DISTINCT T2.name ,  T2.friend ,  T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.friend WHERE T1.age  >  (SELECT avg(age) FROM person)",
      "db_id": "network_2"
    },
    {
      "question": "What are the order dates of orders with price higher than 1000?",
      "query": "SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID  =  T2.Order_ID JOIN Products AS T3 ON T2.Product_ID  =  T3.Product_ID WHERE T3.Product_price  >  1000",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "What are the names of all of Bob's friends?",
      "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend  =  'Bob'",
      "db_id": "network_2"
    },
    {
      "question": "Find the id of the item whose title is \"orange\".",
      "query": "SELECT i_id FROM item WHERE title  =  \"orange\"",
      "db_id": "epinions_1"
    },
    {
      "question": "display the full name (first and last name ) of employee with ID and name of the country presently where (s)he is working.",
      "query": "SELECT T1.first_name ,  T1.last_name , T1.employee_id ,  T4.country_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id JOIN locations AS T3 ON T2.location_id  =  T3.location_id JOIN countries AS T4 ON T3.country_id  =  T4.country_id",
      "db_id": "hr_1"
    },
    {
      "question": "What is the average number of attendance at home games for each year?",
      "query": "SELECT YEAR ,  avg(attendance) FROM home_game GROUP BY YEAR;",
      "db_id": "baseball_1"
    },
    {
      "question": "What are the ids of all trips that had a duration as long as the average trip duration in the zip code 94103?",
      "query": "SELECT id FROM trip WHERE duration  >=  (SELECT avg(duration) FROM trip WHERE zip_code  =  94103)",
      "db_id": "bike_1"
    },
    {
      "question": "What are the codes of types of documents of which there are for or more?",
      "query": "SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count(*)  >  4",
      "db_id": "document_management"
    },
    {
      "question": "What are the first names of all teachers who have taught a course and the corresponding descriptions?",
      "query": "SELECT T2.emp_fname ,  T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN course AS T3 ON T1.crs_code  =  T3.crs_code",
      "db_id": "college_1"
    },
    {
      "question": "What are the ids and details of all accounts?",
      "query": "SELECT account_id ,  account_details FROM Accounts",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "What are the states with the most invoices?",
      "query": "SELECT billing_state ,  COUNT(*) FROM invoices WHERE billing_country  =  \"USA\" GROUP BY billing_state ORDER BY COUNT(*) DESC LIMIT 1;",
      "db_id": "store_1"
    },
    {
      "question": "What are the details of all sales and purchases?",
      "query": "SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "Show the description of the transaction type that occurs most frequently.",
      "query": "SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code  =  T2.transaction_type_code GROUP BY T1.transaction_type_code ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "What is the zip code of the customer Carole Bernhard?",
      "query": "SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
      "db_id": "driving_school"
    },
    {
      "question": "What is the minimum, maximum, and average market value for every company?",
      "query": "SELECT min(market_value) ,  max(market_value) ,  avg(market_value) FROM company",
      "db_id": "gas_company"
    },
    {
      "question": "How many faculty members participate in an activity?",
      "query": "SELECT count(DISTINCT FacID) FROM Faculty_participates_in",
      "db_id": "activity_1"
    },
    {
      "question": "What are the names of products produced by both Creative Labs and Sony?",
      "query": "SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Creative Labs' INTERSECT SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code WHERE T2.name  =  'Sony'",
      "db_id": "manufactory_1"
    },
    {
      "question": "Show all distinct lot details.",
      "query": "SELECT DISTINCT lot_details FROM LOTS",
      "db_id": "tracking_share_transactions"
    },
    {
      "question": "What is the average cost of procedures that physician John Wen was trained in?",
      "query": "SELECT avg(T3.cost) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid  =  T2.physician JOIN procedures AS T3 ON T3.code  =  T2.treatment WHERE T1.name  =  \"John Wen\"",
      "db_id": "hospital_1"
    },
    {
      "question": "What are the code and description of the most frequent behavior incident type?",
      "query": "SELECT T1.incident_type_code ,  T2.incident_type_description FROM Behavior_Incident AS T1 JOIN Ref_Incident_Type AS T2 ON T1.incident_type_code  =  T2.incident_type_code GROUP BY T1.incident_type_code ORDER BY count(*) DESC LIMIT 1",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "How many accounts do we have?",
      "query": "SELECT count(*) FROM Accounts",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "Show project ids and the number of documents in each project.",
      "query": "SELECT project_id ,  count(*) FROM Documents GROUP BY project_id",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "Show the title and director for all films.",
      "query": "SELECT title ,  directed_by FROM film",
      "db_id": "cinema"
    },
    {
      "question": "How many female students (sex is F) whose age is below 25?",
      "query": "SELECT count(*) FROM student WHERE sex  =  'F' AND age  <  25",
      "db_id": "dorm_1"
    },
    {
      "question": "What are the names of all directors whose movies have been reviewed by Sarah Martinez?",
      "query": "SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T3.name  =  'Sarah Martinez'",
      "db_id": "movie_1"
    },
    {
      "question": "Which country is the airport that has the highest altitude located in?",
      "query": "SELECT country FROM airports ORDER BY elevation DESC LIMIT 1",
      "db_id": "flight_4"
    },
    {
      "question": "Which employees have the role with code \"HR\"? Find their names.",
      "query": "SELECT employee_name FROM Employees WHERE role_code  =  \"HR\"",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "For each party, find its location and the name of its host. Sort the result in ascending order of the age of the host.",
      "query": "SELECT T3.Location ,  T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID  =  T2.Host_ID JOIN party AS T3 ON T1.Party_ID  =  T3.Party_ID ORDER BY T2.Age",
      "db_id": "party_host"
    },
    {
      "question": "List all payment methods and number of payments using each payment methods.",
      "query": "SELECT payment_method_code ,  count(*) FROM Customer_Payments GROUP BY payment_method_code;",
      "db_id": "driving_school"
    },
    {
      "question": "How many students are there?",
      "query": "SELECT count(*) FROM student",
      "db_id": "club_1"
    },
    {
      "question": "Show the ids of all employees who don't destroy any document.",
      "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "Find the team that attended the least number of home games in 1980.",
      "query": "SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;",
      "db_id": "baseball_1"
    },
    {
      "question": "How many train stations are there?",
      "query": "SELECT count(*) FROM station",
      "db_id": "train_station"
    },
    {
      "question": "Show name, address road, and city for all branches sorted by open year.",
      "query": "SELECT name ,  address_road ,  city FROM branch ORDER BY open_year",
      "db_id": "shop_membership"
    },
    {
      "question": "What are the names of products that are not 'white' in color and are not measured by the unit 'Handful'?",
      "query": "SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code  =  t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code  =  t3.color_code WHERE t3.color_description  =  \"white\" AND t2.unit_of_measure != \"Handful\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "How old are the students with allergies to food and animal types on average?",
      "query": "SELECT avg(age) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"food\" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy  =  T2.Allergy WHERE T2.allergytype  =  \"animal\")",
      "db_id": "allergy_1"
    },
    {
      "question": "For any rating where the name of reviewer is the same as the director of the movie, return the reviewer name, movie title, and number of stars.",
      "query": "SELECT DISTINCT T3.name ,  T2.title ,  T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID JOIN Reviewer AS T3 ON T1.rID  =  T3.rID WHERE T2.director  =  T3.name",
      "db_id": "movie_1"
    },
    {
      "question": "Show all train names and times in stations in London in descending order by train time.",
      "query": "SELECT T3.name ,  T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id  =  T2.station_id JOIN train AS T3 ON T3.train_id  =  T1.train_id WHERE T2.location  =  'London' ORDER BY T3.time DESC",
      "db_id": "train_station"
    },
    {
      "question": "List every individual's first name, middle name and last name in alphabetical order by last name.",
      "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name",
      "db_id": "e_government"
    },
    {
      "question": "How many books are there?",
      "query": "SELECT count(*) FROM book",
      "db_id": "book_2"
    },
    {
      "question": "What are the names of wines made from red grapes and with prices above 50?",
      "query": "SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape  =  T2.Grape WHERE T1.Color  =  \"Red\" AND T2.price  >  50",
      "db_id": "wine_1"
    },
    {
      "question": "What is the placement date of the order whose invoice number is 10?",
      "query": "SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10",
      "db_id": "tracking_orders"
    },
    {
      "question": "Show the headquarters that have at least two companies.",
      "query": "SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT(*)  >=  2",
      "db_id": "company_employee"
    },
    {
      "question": "What are the ids for courses that were offered in both Fall of 2009 and Spring of 2010?",
      "query": "SELECT course_id FROM SECTION WHERE semester  =  'Fall' AND YEAR  =  2009 INTERSECT SELECT course_id FROM SECTION WHERE semester  =  'Spring' AND YEAR  =  2010",
      "db_id": "college_2"
    },
    {
      "question": "How many distinct birth places are there?",
      "query": "SELECT count(DISTINCT Birth_Place) FROM people",
      "db_id": "body_builder"
    },
    {
      "question": "What are the address and phone number of the buildings managed by \"Brenden\"?",
      "query": "SELECT building_address ,  building_phone FROM Apartment_Buildings WHERE building_manager\t =  \"Brenden\"",
      "db_id": "apartment_rentals"
    },
    {
      "question": "What are the names of customers who have a loan of more than 3000 in amount?",
      "query": "SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id  =  T2.cust_id WHERE amount  >  3000",
      "db_id": "loan_1"
    },
    {
      "question": "What are the employee ids and job ids for employees who make less than the lowest earning employee with title MK_MAN?",
      "query": "SELECT employee_id ,  job_id FROM employees WHERE salary  <  ( SELECT min(salary) FROM employees WHERE job_id  =  'MK_MAN' )",
      "db_id": "hr_1"
    },
    {
      "question": "What is the title and credits of the course that is taught in the largest classroom (with the highest capacity)?",
      "query": "SELECT T3.title ,  T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building  =  T2.building AND T1.room_number  =  T2.room_number JOIN course AS T3 ON T2.course_id  =  T3.course_id WHERE T1.capacity  =  (SELECT max(capacity) FROM classroom)",
      "db_id": "college_2"
    },
    {
      "question": "What are the different grant amounts for documents sent before '1986-08-26 20:49:27' and after the grant ended on '1989-03-16 18:27:16'?",
      "query": "SELECT T1.grant_amount FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id  =  T2.grant_id WHERE T2.sent_date  <  '1986-08-26 20:49:27' INTERSECT SELECT grant_amount FROM grants WHERE grant_end_date  >  '1989-03-16 18:27:16'",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "Give the names of mountains in alphabetical order.",
      "query": "SELECT Name FROM mountain ORDER BY Name ASC",
      "db_id": "climbing"
    },
    {
      "question": "What is the names of movies whose created year is after all movies directed by Steven Spielberg?",
      "query": "SELECT title FROM Movie WHERE YEAR  >  (SELECT max(YEAR) FROM Movie WHERE director  =  \"Steven Spielberg\")",
      "db_id": "movie_1"
    },
    {
      "question": "What are the different classes of races, and how many races correspond to each?",
      "query": "SELECT CLASS ,  count(*) FROM race GROUP BY CLASS",
      "db_id": "race_track"
    },
    {
      "question": "what are the names of the ships ordered by ascending tonnage?",
      "query": "SELECT Name FROM ship ORDER BY Tonnage ASC",
      "db_id": "ship_mission"
    },
    {
      "question": "Find the number of people who is under 40 for each gender.",
      "query": "SELECT count(*) ,  gender FROM Person WHERE age  <  40 GROUP BY gender",
      "db_id": "network_2"
    },
    {
      "question": "What is the area of the appelation that produces the highest number of wines before the year of 2010?",
      "query": "SELECT T1.Area FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation  =  T2.Appelation GROUP BY T2.Appelation HAVING T2.year  <  2010 ORDER BY count(*) DESC LIMIT 1",
      "db_id": "wine_1"
    },
    {
      "question": "Find the city with the most number of stores.",
      "query": "SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id  =  t2.store_id JOIN district AS t3 ON t2.district_id  =  t3.district_id GROUP BY t3.headquartered_city ORDER BY count(*) DESC LIMIT 1",
      "db_id": "store_product"
    },
    {
      "question": "Return all players sorted by college in ascending alphabetical order.",
      "query": "SELECT player FROM match_season ORDER BY College ASC",
      "db_id": "match_season"
    },
    {
      "question": "What are the numbers of constructors for different nationalities?",
      "query": "SELECT count(*) ,  nationality FROM constructors GROUP BY nationality",
      "db_id": "formula_1"
    },
    {
      "question": "Count the number of statements.",
      "query": "SELECT count(*) FROM Statements",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "What is the name of the song that was released most recently?",
      "query": "SELECT song_name ,  releasedate FROM song ORDER BY releasedate DESC LIMIT 1",
      "db_id": "music_1"
    },
    {
      "question": "What are the cities no customers live in?",
      "query": "SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id  =  t2.customer_id JOIN addresses AS t3 ON t2.address_id  =  t3.address_id)",
      "db_id": "customers_and_addresses"
    },
    {
      "question": "Which claim incurred the most number of settlements? List the claim id, the date the claim was made, and the number.",
      "query": "SELECT T1.claim_id ,  T1.date_claim_made ,  count(*) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id  =  T2.claim_id GROUP BY T1.claim_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "insurance_policies"
    },
    {
      "question": "What are the dates of birth of entrepreneurs with investor \"Simon Woodroffe\" or \"Peter Jones\"?",
      "query": "SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID  =  T2.People_ID WHERE T1.Investor  =  \"Simon Woodroffe\" OR T1.Investor  =  \"Peter Jones\"",
      "db_id": "entrepreneur"
    },
    {
      "question": "How many adults stay in the room CONRAD SELBIG checked in on Oct 23, 2010?",
      "query": "SELECT Adults FROM Reservations WHERE CheckIn  =  \"2010-10-23\" AND FirstName  =  \"CONRAD\" AND LastName  =  \"SELBIG\";",
      "db_id": "inn_1"
    },
    {
      "question": "Find the name of the department that offers the highest total credits?",
      "query": "SELECT dept_name FROM course GROUP BY dept_name ORDER BY sum(credits) DESC LIMIT 1",
      "db_id": "college_2"
    },
    {
      "question": "What are the names of the top 8 countries by total invoice size and what are those sizes?",
      "query": "SELECT billing_country ,  SUM(total) FROM invoices GROUP BY billing_country ORDER BY SUM(total) DESC LIMIT 8;",
      "db_id": "store_1"
    },
    {
      "question": "Find the total hours of the projects that scientists named Michael Rogers or Carol Smith are assigned to.",
      "query": "SELECT sum(T2.hours) FROM assignedto AS T1 JOIN projects AS T2 ON T1.project  =  T2.code JOIN scientists AS T3 ON T1.scientist  =  T3.SSN WHERE T3.name  =  'Michael Rogers' OR T3.name  =  'Carol Smith'",
      "db_id": "scientist_1"
    },
    {
      "question": "What is the average rating and resolution of all bangla songs?",
      "query": "SELECT avg(rating) ,  avg(resolution) FROM song WHERE languages  =  \"bangla\"",
      "db_id": "music_1"
    },
    {
      "question": "Show all school names in alphabetical order.",
      "query": "SELECT school_name FROM school ORDER BY school_name",
      "db_id": "school_finance"
    },
    {
      "question": "List the duration, file size and format of songs whose genre is pop, ordered by title?",
      "query": "SELECT T1.duration ,  T1.file_size ,  T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id  =  T2.f_id WHERE T2.genre_is  =  \"pop\" ORDER BY T2.song_name",
      "db_id": "music_1"
    },
    {
      "question": "Show the ministers and the time they took and left office, listed by the time they left office.",
      "query": "SELECT minister ,  took_office ,  left_office FROM party ORDER BY left_office",
      "db_id": "party_people"
    },
    {
      "question": "Return the famous titles for artists that have volumes that lasted more than 2 weeks on top.",
      "query": "SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T2.Weeks_on_Top  >  2",
      "db_id": "music_4"
    },
    {
      "question": "List the top 10 customers by total gross sales. List customers' first and last name and total gross sales.",
      "query": "SELECT T1.first_name ,  T1.last_name ,  SUM(T2.total) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id  =  T1.id GROUP BY T1.id ORDER BY SUM(T2.total) DESC LIMIT 10;",
      "db_id": "store_1"
    },
    {
      "question": "What are all the different first names of the drivers who are in position as standing and won?",
      "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1",
      "db_id": "formula_1"
    },
    {
      "question": "Which faculty members advise two ore more students? Give me their faculty ids.",
      "query": "SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID  =  T2.advisor GROUP BY T1.FacID HAVING count(*)  >=  2",
      "db_id": "activity_1"
    },
    {
      "question": "What are the player name, number of matches, and information source for players who do not suffer from injury of 'Knee problem'?",
      "query": "SELECT player ,  number_of_matches ,  SOURCE FROM injury_accident WHERE injury != 'Knee problem'",
      "db_id": "game_injury"
    },
    {
      "question": "What are the first and last names of all customers who lived in Lockmanfurt?",
      "query": "SELECT T1.first_name ,  T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = \"Lockmanfurt\";",
      "db_id": "driving_school"
    },
    {
      "question": "Which marketing region has the most drama workshop groups? Give me the region code.",
      "query": "SELECT Marketing_Region_Code FROM Drama_Workshop_Groups GROUP BY Marketing_Region_Code ORDER BY count(*) DESC LIMIT 1",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "Find the name of the airport in the city of Goroka.",
      "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
      "db_id": "flight_4"
    },
    {
      "question": "How many artworks are there?",
      "query": "SELECT count(*) FROM artwork",
      "db_id": "entertainment_awards"
    },
    {
      "question": "What is the average number of votes of representatives from party \"Republican\"?",
      "query": "SELECT avg(T1.Votes) FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID  =  T2.Representative_ID WHERE T2.Party  =  \"Republican\"",
      "db_id": "election_representative"
    },
    {
      "question": "How many unique classes are offered?",
      "query": "SELECT count(DISTINCT class_code) FROM CLASS",
      "db_id": "college_1"
    },
    {
      "question": "How many accounts have a savings balance above the average savings balance?",
      "query": "SELECT count(*) FROM savings WHERE balance  >  (SELECT avg(balance) FROM savings)",
      "db_id": "small_bank_1"
    },
    {
      "question": "Show all countries and the number of people from each country.",
      "query": "SELECT country ,  count(*) FROM people GROUP BY country",
      "db_id": "wedding"
    },
    {
      "question": "Show the product type codes that have at least two products.",
      "query": "SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT(*)  >=  2",
      "db_id": "solvency_ii"
    },
    {
      "question": "Which club has the most female students as their members? Give me the name of the club.",
      "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",
      "db_id": "club_1"
    },
    {
      "question": "What are the start date and end date of each apartment booking?",
      "query": "SELECT booking_start_date ,  booking_end_date FROM Apartment_Bookings",
      "db_id": "apartment_rentals"
    },
    {
      "question": "Count the number of gymnasts.",
      "query": "SELECT count(*) FROM gymnast",
      "db_id": "gymnast"
    },
    {
      "question": "What is the average number of years spent working as a journalist?",
      "query": "SELECT avg(Years_working) FROM journalist",
      "db_id": "news_report"
    },
    {
      "question": "What are the names of the tourist attractions and the dates when the tourists named Vincent or Vivian visited there?",
      "query": "SELECT T1.Name ,  T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID  =  T3.Tourist_Attraction_ID AND T2.Tourist_ID  =  T3.Tourist_ID WHERE T2.Tourist_Details  =  \"Vincent\" OR T2.Tourist_Details  =  \"Vivian\"",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "How many distinct characteristic names does the product \"cumin\" have?",
      "query": "SELECT count(DISTINCT t3.characteristic_name) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id WHERE t1.product_name  =  \"sesame\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Count the number of different software platforms.",
      "query": "SELECT count(DISTINCT Software_Platform) FROM device",
      "db_id": "device"
    },
    {
      "question": "what is the name of the country that participated in the most tournament competitions?",
      "query": "SELECT country FROM competition WHERE competition_type  =  'Tournament' GROUP BY country ORDER BY count(*) DESC LIMIT 1",
      "db_id": "sports_competition"
    },
    {
      "question": "Which head's name has the substring 'Ha'? List the id and name.",
      "query": "SELECT head_id ,  name FROM head WHERE name LIKE '%Ha%'",
      "db_id": "department_management"
    },
    {
      "question": "Which employees do not destroy any document? Find their employee ids.",
      "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "What is the customer id, first and last name with most number of accounts.",
      "query": "SELECT T1.customer_id ,  T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id GROUP BY T1.customer_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "Find all the songs that do not have a back vocal.",
      "query": "SELECT DISTINCT title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid EXCEPT SELECT t2.title FROM vocals AS t1 JOIN songs AS t2 ON t1.songid  =  t2.songid WHERE TYPE  =  \"back\"",
      "db_id": "music_2"
    },
    {
      "question": "What is the name of the browser that became compatible with the accelerator 'CProxy' after year 1998 ?",
      "query": "SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id  =  T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id  =  T3.id WHERE T3.name  =  'CProxy' AND T2.compatible_since_year  >  1998",
      "db_id": "browser_web"
    },
    {
      "question": "What are the dates of the orders made by the customer named \"Jeramie\"?",
      "query": "SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = \"Jeramie\"",
      "db_id": "tracking_orders"
    },
    {
      "question": "Find the description of the most popular role among the users that have logged in.",
      "query": "SELECT role_description FROM ROLES WHERE role_code  =  (SELECT role_code FROM users WHERE user_login  =  1 GROUP BY role_code ORDER BY count(*) DESC LIMIT 1)",
      "db_id": "document_management"
    },
    {
      "question": "Which bike traveled the most often in zip code 94002?",
      "query": "SELECT bike_id FROM trip WHERE zip_code  =  94002 GROUP BY bike_id ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "bike_1"
    },
    {
      "question": "What are the names and ids of all stations that have more than 14 bikes available on average or had bikes installed in December?",
      "query": "SELECT T1.name ,  T1.id FROM station AS T1 JOIN status AS T2 ON T1.id  =  T2.station_id GROUP BY T2.station_id HAVING avg(T2.bikes_available)  >  14 UNION SELECT name ,  id FROM station WHERE installation_date LIKE \"12/%\"",
      "db_id": "bike_1"
    },
    {
      "question": "Return the address of store 1.",
      "query": "SELECT T2.address FROM store AS T1 JOIN address AS T2 ON T1.address_id  =  T2.address_id WHERE store_id  =  1",
      "db_id": "sakila_1"
    },
    {
      "question": "What are the names and number of works for all artists who have sung at least one song in English?",
      "query": "SELECT T1.artist_name ,  count(*) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name  =  T2.artist_name WHERE T2.languages  =  \"english\" GROUP BY T2.artist_name HAVING count(*)  >=  1",
      "db_id": "music_1"
    },
    {
      "question": "What are all the locations with a cinema?",
      "query": "SELECT DISTINCT LOCATION FROM cinema",
      "db_id": "cinema"
    },
    {
      "question": "Return the color description that is most common across all products.",
      "query": "SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code  =  t2.color_code GROUP BY t2.color_description ORDER BY count(*) DESC LIMIT 1",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "List all ship names in the order of built year and class.",
      "query": "SELECT name FROM ship ORDER BY built_year ,  CLASS",
      "db_id": "ship_1"
    },
    {
      "question": "What are the ids of the students who registered for course 301 most recently?",
      "query": "SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1",
      "db_id": "student_assessment"
    },
    {
      "question": "Find the names of furnitures whose prices are lower than the highest price.",
      "query": "SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID  =  t2.Furniture_ID WHERE t2.Price_in_Dollar  <  (SELECT max(Price_in_Dollar) FROM furniture_manufacte)",
      "db_id": "manufacturer"
    },
    {
      "question": "display the ID for those employees who did two or more jobs in the past.",
      "query": "SELECT employee_id FROM job_history GROUP BY employee_id HAVING COUNT(*)  >= 2",
      "db_id": "hr_1"
    },
    {
      "question": "Find the number of students taught by the teacher KAWA GORDON.",
      "query": "SELECT count(*) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom WHERE T2.firstname  =  \"KAWA\" AND T2.lastname  =  \"GORDON\"",
      "db_id": "student_1"
    },
    {
      "question": "What is the average salary of employees who have a commission percentage that is not null?",
      "query": "SELECT department_id ,  AVG(salary) FROM employees WHERE commission_pct != \"null\" GROUP BY department_id",
      "db_id": "hr_1"
    },
    {
      "question": "What is the storm name and max speed which affected the greatest number of regions?",
      "query": "SELECT T1.name ,  T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id  =  T2.storm_id GROUP BY T1.storm_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "storm_record"
    },
    {
      "question": "Find the average prices of all products from each manufacture, and list each company's name.",
      "query": "SELECT avg(T1.price) ,  T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer  =  T2.code GROUP BY T2.name",
      "db_id": "manufactory_1"
    },
    {
      "question": "What is the largest and smallest customer codes?",
      "query": "SELECT max(customer_code) ,  min(customer_code) FROM Customers",
      "db_id": "department_store"
    },
    {
      "question": "What are the different region names, ordered by labels?",
      "query": "SELECT DISTINCT region_name FROM region ORDER BY Label",
      "db_id": "party_people"
    },
    {
      "question": "What are the issue dates of volumes associated with the artist aged 23 or younger?",
      "query": "SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID  =  T2.Artist_ID WHERE T1.age  <=  23",
      "db_id": "music_4"
    },
    {
      "question": "What are the maximum and minimum number of transit passengers of all aiports.",
      "query": "SELECT max(Transit_Passengers) ,  min(Transit_Passengers) FROM airport",
      "db_id": "aircraft"
    },
    {
      "question": "What is the name of the organization that was formed most recently?",
      "query": "SELECT organization_name FROM organizations ORDER BY date_formed DESC LIMIT 1",
      "db_id": "e_government"
    },
    {
      "question": "How many customers use each payment method?",
      "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code",
      "db_id": "department_store"
    },
    {
      "question": "What are the ids and details of all statements?",
      "query": "SELECT STATEMENT_ID ,  statement_details FROM Statements",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "Show the average price range of hotels that have 5 star ratings and allow pets.",
      "query": "SELECT avg(price_range) FROM HOTELS WHERE star_rating_code  =  \"5\" AND pets_allowed_yn  =  1",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "Show the number of audience in year 2008 or 2010.",
      "query": "SELECT Num_of_Audience FROM festival_detail WHERE YEAR  =  2008 OR YEAR  =  2010",
      "db_id": "entertainment_awards"
    },
    {
      "question": "What are the three most costly procedures?",
      "query": "SELECT name FROM procedures ORDER BY cost LIMIT 3",
      "db_id": "hospital_1"
    },
    {
      "question": "For each director, return the director's name together with the title of the movie they directed that received the highest rating among all of their movies, and the value of that rating. Ignore movies whose director is NULL.",
      "query": "SELECT T2.title ,  T1.stars ,  T2.director ,  max(T1.stars) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID  =  T2.mID WHERE director != \"null\" GROUP BY director",
      "db_id": "movie_1"
    },
    {
      "question": "Find the student ID and middle name for all the students with at most two enrollments.",
      "query": "SELECT T1.student_id ,  T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id GROUP BY T1.student_id HAVING COUNT(*)  <=  2",
      "db_id": "e_learning"
    },
    {
      "question": "what is the name and age of the youngest winning pilot?",
      "query": "SELECT t1.name ,  t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id  =  t2.winning_pilot ORDER BY t1.age LIMIT 1",
      "db_id": "aircraft"
    },
    {
      "question": "What is the latitude, longitude, city of the station from which the shortest trip started?",
      "query": "SELECT T1.lat ,  T1.long ,  T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id  =  T2.start_station_id ORDER BY T2.duration LIMIT 1",
      "db_id": "bike_1"
    },
    {
      "question": "Count the number of trips that did not end in San Francisco city.",
      "query": "SELECT count(*) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id  =  T2.id WHERE T2.city !=  \"San Francisco\"",
      "db_id": "bike_1"
    },
    {
      "question": "How many CSU campuses are there?",
      "query": "SELECT count(*) FROM campuses",
      "db_id": "csu_1"
    },
    {
      "question": "What are the amenities in alphabetical order that Anonymous Donor Hall has?",
      "query": "SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid  =  T1.amenid JOIN dorm AS T3 ON T2.dormid  =  T3.dormid WHERE T3.dorm_name  =  'Anonymous Donor Hall' ORDER BY T1.amenity_name",
      "db_id": "dorm_1"
    },
    {
      "question": "What is the number of departments in Division \"AS\"?",
      "query": "SELECT count(*) FROM DEPARTMENT WHERE Division  =  \"AS\"",
      "db_id": "college_3"
    },
    {
      "question": "Find the team names of the universities whose enrollments are smaller than the average enrollment size.",
      "query": "SELECT t2.team_name FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id  =  t2.school_id WHERE enrollment  <  (SELECT avg(enrollment) FROM university)",
      "db_id": "university_basketball"
    },
    {
      "question": "How many team franchises are active, with active value 'Y'?",
      "query": "SELECT count(*) FROM team_franchise WHERE active = 'Y';",
      "db_id": "baseball_1"
    },
    {
      "question": "Find the first name and last name of the instructor of course that has course name",
      "query": "SELECT T2.Fname ,  T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor  =  T2.FacID WHERE T1.CName  =  \"COMPUTER LITERACY\"",
      "db_id": "college_3"
    },
    {
      "question": "What are the country names, area and population which has both roller coasters with speed higher",
      "query": "SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  >  60 INTERSECT SELECT T1.name ,  T1.area ,  T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID  =  T2.Country_ID WHERE T2.speed  <  55",
      "db_id": "roller_coaster"
    },
    {
      "question": "For each headquarter, what are the headquarter and how many companies are centered there?",
      "query": "SELECT headquarters ,  count(*) FROM company GROUP BY headquarters",
      "db_id": "gas_company"
    },
    {
      "question": "Find the salary and manager number for those employees who is working under a manager.",
      "query": "SELECT salary ,  manager_id FROM employees WHERE manager_id != \"null\"",
      "db_id": "hr_1"
    },
    {
      "question": "Find the names of the items that did not receive any review.",
      "query": "SELECT title FROM item WHERE i_id NOT IN (SELECT i_id FROM review)",
      "db_id": "epinions_1"
    },
    {
      "question": "How many aircrafts exist in the database?",
      "query": "SELECT count(*) FROM Aircraft",
      "db_id": "flight_1"
    },
    {
      "question": "Find the names of all English songs.",
      "query": "SELECT song_name FROM song WHERE languages  =  \"english\"",
      "db_id": "music_1"
    },
    {
      "question": "How many classes exist for each school?",
      "query": "SELECT count(*) ,  T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code  =  T2.crs_code JOIN department AS T3 ON T2.dept_code  =  T3.dept_code GROUP BY T3.school_code",
      "db_id": "college_1"
    },
    {
      "question": "What are all the policy types of the customer that has the most policies listed?",
      "query": "SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id JOIN available_policies AS t3 ON t2.policy_id  =  t3.policy_id WHERE t1.customer_name  =  (SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id  =  t2.customer_id GROUP BY t1.customer_name ORDER BY count(*) DESC LIMIT 1)",
      "db_id": "insurance_fnol"
    },
    {
      "question": "What are the names of all players that got more than the average number of points?",
      "query": "SELECT name FROM player WHERE points  >  (SELECT avg(points) FROM player)",
      "db_id": "sports_competition"
    },
    {
      "question": "Find the name and salary of instructors whose salary is below the average salary of the instructors in the Physics department.",
      "query": "SELECT name ,  salary FROM instructor WHERE salary  <  (SELECT avg(salary) FROM instructor WHERE dept_name  =  'Physics')",
      "db_id": "college_2"
    },
    {
      "question": "Find the names of students who have taken any course in the fall semester of year 2003.",
      "query": "SELECT name FROM student WHERE id IN (SELECT id FROM takes WHERE semester  =  'Fall' AND YEAR  =  2003)",
      "db_id": "college_2"
    },
    {
      "question": "What is the name of the school with smallest enrollment size per state?",
      "query": "SELECT cName ,  state ,  min(enr) FROM college GROUP BY state",
      "db_id": "soccer_2"
    },
    {
      "question": "What is Nancy Edwards's address?",
      "query": "SELECT address FROM employees WHERE first_name = \"Nancy\" AND last_name = \"Edwards\";",
      "db_id": "store_1"
    },
    {
      "question": "What is the project detail for the project with document \"King Book\"?",
      "query": "SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id  =  T2.project_id WHERE T2.document_name  =  \"King Book\"",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "How many distinct names are associated with all the photos?",
      "query": "SELECT count(DISTINCT Name) FROM PHOTOS",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "Find the branch names of banks in the New York state.",
      "query": "SELECT bname FROM bank WHERE state  =  'New York'",
      "db_id": "loan_1"
    },
    {
      "question": "How many documents have expenses?",
      "query": "SELECT count(*) FROM Documents_with_expenses",
      "db_id": "cre_Docs_and_Epenses"
    },
    {
      "question": "What are the titles of courses that are offered in more than one department?",
      "query": "SELECT title FROM course GROUP BY title HAVING count(*)  >  1",
      "db_id": "college_2"
    },
    {
      "question": "Find the total amount of products ordered before 2018-03-17 07:13:53.",
      "query": "SELECT sum(t2.order_quantity) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id  =  t2.order_id WHERE t1.order_date  <  \"2018-03-17 07:13:53\"",
      "db_id": "customers_and_addresses"
    },
    {
      "question": "What is the average speed of roller coasters?",
      "query": "SELECT avg(Speed) FROM roller_coaster",
      "db_id": "roller_coaster"
    },
    {
      "question": "What are the names of wines whose production year are before the year of all wines by Brander winery?",
      "query": "SELECT Name FROM WINE WHERE YEAR  <  (SELECT min(YEAR) FROM WINE WHERE Winery  =  \"Brander\")",
      "db_id": "wine_1"
    },
    {
      "question": "How many students are affected by each allergy type?",
      "query": "SELECT T2.allergytype ,  count(*) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy  =  T2.allergy GROUP BY T2.allergytype",
      "db_id": "allergy_1"
    },
    {
      "question": "What are the name, role code, and date of birth of the employee named 'Armani'?",
      "query": "SELECT employee_name ,  role_code ,  date_of_birth FROM Employees WHERE employee_Name  =  'Armani'",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "Find the dates of assessment notes for students with first name \"Fanny\".",
      "query": "SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id  =  T2.student_id WHERE T2.first_name  =  \"Fanny\"",
      "db_id": "behavior_monitoring"
    },
    {
      "question": "Show the nominees that have nominated musicals for both \"Tony Award\" and \"Drama Desk Award\".",
      "query": "SELECT Nominee FROM musical WHERE Award  =  \"Tony Award\" INTERSECT SELECT Nominee FROM musical WHERE Award  =  \"Drama Desk Award\"",
      "db_id": "musical"
    },
    {
      "question": "Find the distinct driver id of all drivers that have a longer stop duration than some drivers in the race whose id is 841?",
      "query": "SELECT DISTINCT driverid ,  STOP FROM pitstops WHERE duration  >  (SELECT min(duration) FROM pitstops WHERE raceid  =  841)",
      "db_id": "formula_1"
    },
    {
      "question": "What are the names of products with category \"Spices\"?",
      "query": "SELECT product_name FROM products WHERE product_category_code  =  \"Spices\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "List the names of people that are not employed by any company",
      "query": "SELECT Name FROM people WHERE People_ID NOT IN (SELECT People_ID FROM employment)",
      "db_id": "company_employee"
    },
    {
      "question": "Count the number of actors.",
      "query": "SELECT count(*) FROM actor",
      "db_id": "musical"
    },
    {
      "question": "What is the age of student Linda Smith?",
      "query": "SELECT Age FROM Student WHERE Fname = \"Linda\" AND Lname = \"Smith\";",
      "db_id": "restaurant_1"
    },
    {
      "question": "Show the number of document types.",
      "query": "SELECT count(*) FROM Ref_document_types",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "Which major has most number of students?",
      "query": "SELECT major FROM Student GROUP BY major ORDER BY count(*) DESC LIMIT 1",
      "db_id": "allergy_1"
    },
    {
      "question": "What are the distinct names of wines with prices higher than any wine from John Anthony winery.",
      "query": "SELECT DISTINCT Name FROM WINE WHERE Price  >  (SELECT min(Price) FROM wine WHERE Winery  =  \"John Anthony\")",
      "db_id": "wine_1"
    },
    {
      "question": "What is the team with at least 2 technicians?",
      "query": "SELECT Team FROM technician GROUP BY Team HAVING COUNT(*)  >=  2",
      "db_id": "machine_repair"
    },
    {
      "question": "What type of game is Call of Destiny?",
      "query": "SELECT gtype FROM Video_games WHERE gname  =  \"Call of Destiny\"",
      "db_id": "game_1"
    },
    {
      "question": "Which employees do not authorize destruction for any document? Give me their employee ids.",
      "query": "SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "List the names of clubs that do not have any players.",
      "query": "SELECT name FROM CLub WHERE Club_ID NOT IN (SELECT Club_ID FROM player)",
      "db_id": "sports_competition"
    },
    {
      "question": "Find the name and position of physicians who prescribe some medication whose brand is X?",
      "query": "SELECT DISTINCT T1.name ,  T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand  =  \"X\"",
      "db_id": "hospital_1"
    },
    {
      "question": "Return the different nominees of musicals that have an award that is not the Tony Award.",
      "query": "SELECT DISTINCT Nominee FROM musical WHERE Award != \"Tony Award\"",
      "db_id": "musical"
    },
    {
      "question": "What is the last name of the staff member in charge of the complaint on the product with the lowest price?",
      "query": "SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id  =  t2.staff_id JOIN products AS t3 ON t2.product_id  =  t3.product_id ORDER BY t3.product_price LIMIT 1",
      "db_id": "customer_complaints"
    },
    {
      "question": "What are the famous titles and ages of each artist, listed in descending order by age?",
      "query": "SELECT Famous_Title ,  Age FROM artist ORDER BY Age DESC",
      "db_id": "music_4"
    },
    {
      "question": "List the dates of debates with number of audience bigger than 150",
      "query": "SELECT Date FROM debate WHERE Num_of_Audience  >  150",
      "db_id": "debate"
    },
    {
      "question": "What are the mascots for schools with enrollments above the average?",
      "query": "SELECT mascot FROM school WHERE enrollment  >  (SELECT avg(enrollment) FROM school)",
      "db_id": "school_finance"
    },
    {
      "question": "Show all publishers which do not have a book in 1989.",
      "query": "SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR  =  1989",
      "db_id": "culture_company"
    },
    {
      "question": "What is the most common type of ships?",
      "query": "SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "ship_mission"
    },
    {
      "question": "For each payment method, return how many customers use it.",
      "query": "SELECT payment_method_code ,  count(*) FROM customers GROUP BY payment_method_code",
      "db_id": "department_store"
    },
    {
      "question": "What are the students ids of students who have more than one allergy?",
      "query": "SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count(*)  >=  2",
      "db_id": "allergy_1"
    },
    {
      "question": "What are the average and minimum weights for people of each sex?",
      "query": "SELECT avg(weight) ,  min(weight) ,  sex FROM people GROUP BY sex",
      "db_id": "candidate_poll"
    },
    {
      "question": "How many gas companies are there?",
      "query": "SELECT count(*) FROM company",
      "db_id": "gas_company"
    },
    {
      "question": "What are the three countries that the least players are from?",
      "query": "SELECT birth_country FROM player GROUP BY birth_country ORDER BY count(*) ASC LIMIT 3;",
      "db_id": "baseball_1"
    },
    {
      "question": "Count the number of distinct channel owners.",
      "query": "SELECT count(DISTINCT OWNER) FROM channel",
      "db_id": "program_share"
    },
    {
      "question": "Find the name of instructors who are advisors of the students from the Math department, and sort the results by students' total credit.",
      "query": "SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id  =  T2.id JOIN student AS T3 ON T1.s_id  =  T3.id WHERE T3.dept_name  =  'Math' ORDER BY T3.tot_cred",
      "db_id": "college_2"
    },
    {
      "question": "Find the names of all races held in 2017.",
      "query": "SELECT name FROM races WHERE YEAR = 2017",
      "db_id": "formula_1"
    },
    {
      "question": "Show the names of members and the dates of performances they attended in descending order of attendance of the performances.",
      "query": "SELECT T2.Name ,  T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID  =  T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID  =  T3.Performance_ID ORDER BY T3.Attendance DESC",
      "db_id": "performance_attendance"
    },
    {
      "question": "display the full name (first and last), hire date, salary, and department number for those employees whose first name does not containing the letter M and make the result set in ascending order by department number.",
      "query": "SELECT first_name ,  last_name ,  hire_date ,  salary ,  department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id",
      "db_id": "hr_1"
    },
    {
      "question": "Return the founder of Sony.",
      "query": "SELECT founder FROM manufacturers WHERE name  =  'Sony'",
      "db_id": "manufactory_1"
    },
    {
      "question": "Which customer's name contains \"Alex\"? Find the full name.",
      "query": "SELECT customer_name FROM customers WHERE customer_name LIKE \"%Alex%\"",
      "db_id": "customers_and_addresses"
    },
    {
      "question": "What are the white percentages of cities, and the corresponding crime rates of the counties they correspond to?",
      "query": "SELECT T1.White ,  T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID  =  T2.County_ID",
      "db_id": "county_public_safety"
    },
    {
      "question": "Find the name of the club that has the most female students.",
      "query": "SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t3.sex  =  \"F\" GROUP BY t1.clubname ORDER BY count(*) DESC LIMIT 1",
      "db_id": "club_1"
    },
    {
      "question": "What are the details of the student who registered for the most number of courses?",
      "query": "SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "student_assessment"
    },
    {
      "question": "What is the total number of campuses?",
      "query": "SELECT count(*) FROM campuses",
      "db_id": "csu_1"
    },
    {
      "question": "Which staff members are assigned to the problem with id 1? Give me their first and last names.",
      "query": "SELECT DISTINCT staff_first_name ,  staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1",
      "db_id": "tracking_software_problems"
    },
    {
      "question": "Which party had the most hosts? Give me the party location.",
      "query": "SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1",
      "db_id": "party_host"
    },
    {
      "question": "How many distinct currency codes are there for all drama workshop groups?",
      "query": "SELECT count(DISTINCT Currency_Code) FROM Drama_Workshop_Groups",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "How many different positions of players are there?",
      "query": "SELECT count(DISTINCT POSITION) FROM player",
      "db_id": "school_player"
    },
    {
      "question": "What is the name of the customer who has made the largest amount of claim in a single claim?",
      "query": "SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id  =  t2.policy_id JOIN customers AS t3 ON t2.customer_id  =  t3.customer_id WHERE t1.amount_claimed  =  (SELECT max(amount_claimed) FROM claim_headers)",
      "db_id": "insurance_and_eClaims"
    },
    {
      "question": "Find the number of amenities for each of the dorms that can accommodate more than 100 students.",
      "query": "SELECT count(*) ,  T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid  =  T2.dormid WHERE T1.student_capacity  >  100 GROUP BY T1.dormid",
      "db_id": "dorm_1"
    },
    {
      "question": "List the nominees that have been nominated more than two musicals.",
      "query": "SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT(*)  >  2",
      "db_id": "musical"
    },
    {
      "question": "What are the names and average prices of products for manufacturers whose products cost on average 150 or more?",
      "query": "SELECT avg(T1.Price) ,  T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code GROUP BY T2.name HAVING avg(T1.price) >= 150",
      "db_id": "manufactory_1"
    },
    {
      "question": "What are the ids of all moviest hat have not been reviewed by Britanny Harris?",
      "query": "SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID  =  T2.rID WHERE T2.name  =  \"Brittany Harris\"",
      "db_id": "movie_1"
    },
    {
      "question": "What are the email addresses of the drama workshop groups with address in Alaska state?",
      "query": "SELECT T2.Store_Email_Address FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID  =  T2.Address_ID WHERE T1.State_County  =  \"Alaska\"",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "Find the first name and age of the students who are playing both Football and Lacrosse.",
      "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")",
      "db_id": "game_1"
    },
    {
      "question": "What is the number of students playing as a goalie?",
      "query": "SELECT count(*) FROM tryout WHERE pPos  =  'goalie'",
      "db_id": "soccer_2"
    },
    {
      "question": "Which teacher teaches the most students? Give me the first name and last name of the teacher.",
      "query": "SELECT T2.firstname ,  T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom  =  T2.classroom GROUP BY T2.firstname ,  T2.lastname ORDER BY count(*) DESC LIMIT 1",
      "db_id": "student_1"
    },
    {
      "question": "What is the zip code in which the average mean sea level pressure is the lowest?",
      "query": "SELECT zip_code FROM weather GROUP BY zip_code ORDER BY avg(mean_sea_level_pressure_inches) LIMIT 1",
      "db_id": "bike_1"
    },
    {
      "question": "find the name of all departments that do actually have one or more employees assigned to them.",
      "query": "SELECT DISTINCT T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id  =  T2.department_id",
      "db_id": "hr_1"
    },
    {
      "question": "Find the name and building of the department with the highest budget.",
      "query": "SELECT dept_name ,  building FROM department ORDER BY budget DESC LIMIT 1",
      "db_id": "college_2"
    },
    {
      "question": "What is the number of artists for each gender?",
      "query": "SELECT count(*) ,  gender FROM artist GROUP BY gender",
      "db_id": "music_1"
    },
    {
      "question": "Find the name, headquarter and revenue of all manufacturers sorted by their revenue in the descending order.",
      "query": "SELECT name ,  headquarter ,  revenue FROM manufacturers ORDER BY revenue DESC",
      "db_id": "manufactory_1"
    },
    {
      "question": "For each party, return the name of the party and the number of delegates from that party.",
      "query": "SELECT T2.Party ,  COUNT(*) FROM election AS T1 JOIN party AS T2 ON T1.Party  =  T2.Party_ID GROUP BY T1.Party",
      "db_id": "election"
    },
    {
      "question": "Please show different software platforms and the corresponding number of devices using each.",
      "query": "SELECT Software_Platform ,  COUNT(*) FROM device GROUP BY Software_Platform",
      "db_id": "device"
    },
    {
      "question": "What campus has the most degrees  conferrred over its entire existence?",
      "query": "SELECT campus FROM degrees GROUP BY campus ORDER BY sum(degrees) DESC LIMIT 1",
      "db_id": "csu_1"
    },
    {
      "question": "Give the class of races that is most common.",
      "query": "SELECT CLASS FROM race GROUP BY CLASS ORDER BY count(*) DESC LIMIT 1",
      "db_id": "race_track"
    },
    {
      "question": "What are the different ages of editors? Show each age along with the number of editors of that age.",
      "query": "SELECT Age ,  COUNT(*) FROM editor GROUP BY Age",
      "db_id": "journal_committee"
    },
    {
      "question": "How many routes does American Airlines operate?",
      "query": "SELECT count(*) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid  =  T2.alid WHERE T1.name  =  'American Airlines'",
      "db_id": "flight_4"
    },
    {
      "question": "Return the average price for each product type.",
      "query": "SELECT product_type_code ,  avg(product_price) FROM products GROUP BY product_type_code",
      "db_id": "department_store"
    },
    {
      "question": "Show all student IDs with the number of sports and total number of games played",
      "query": "SELECT StuID ,  count(*) ,  sum(gamesplayed) FROM Sportsinfo GROUP BY StuID",
      "db_id": "game_1"
    },
    {
      "question": "What are the full names of employees who with in department 70 or 90?",
      "query": "SELECT first_name ,  last_name FROM employees WHERE department_id  =  70 OR department_id  =  90",
      "db_id": "hr_1"
    },
    {
      "question": "What are the last names of faculty in building Barton, sorted by last name?",
      "query": "SELECT Lname FROM FACULTY WHERE Building  =  \"Barton\" ORDER BY Lname",
      "db_id": "college_3"
    },
    {
      "question": "Who is the delegate of district 1 in the elections?",
      "query": "SELECT Delegate FROM election WHERE District  =  1",
      "db_id": "election"
    },
    {
      "question": "How many customers are there in the customer type with the most customers?",
      "query": "SELECT count(*) FROM customers GROUP BY customer_type_code ORDER BY count(*) DESC LIMIT 1",
      "db_id": "customer_complaints"
    },
    {
      "question": "What products are available at store named \"Miramichi\"?",
      "query": "SELECT t1.product FROM product AS t1 JOIN store_product AS t2 ON t1.product_id  =  t2.product_id JOIN store AS t3 ON t2.store_id  =  t3.store_id WHERE t3.store_name  =  \"Miramichi\"",
      "db_id": "store_product"
    },
    {
      "question": "What are the three products that have the most problems?s",
      "query": "SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_name ORDER BY count(*) DESC LIMIT 3",
      "db_id": "tracking_software_problems"
    },
    {
      "question": "What are the types of every competition and in which countries are they located?",
      "query": "SELECT Competition_type ,  Country FROM competition",
      "db_id": "sports_competition"
    },
    {
      "question": "What is the id, genre, and name of the artist for every English song ordered by ascending rating?",
      "query": "SELECT f_id ,  genre_is ,  artist_name FROM song WHERE languages  =   \"english\" ORDER BY rating",
      "db_id": "music_1"
    },
    {
      "question": "Who is the president of the club \"Bootup Baltimore\"? Give me the first and last name.",
      "query": "SELECT t3.fname ,  t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid  =  t2.clubid JOIN student AS t3 ON t2.stuid  =  t3.stuid WHERE t1.clubname  =  \"Bootup Baltimore\" AND t2.position  =  \"President\"",
      "db_id": "club_1"
    },
    {
      "question": "Show the names of people aged either 35 or 36.",
      "query": "SELECT Name FROM  people WHERE Age  =  35 OR Age  =  36",
      "db_id": "debate"
    },
    {
      "question": "What are the different first names and highest degree attained for professors teaching in the Computer Information Systems department?",
      "query": "SELECT DISTINCT T2.emp_fname ,  T3.prof_high_degree FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num  =  T2.emp_num JOIN professor AS T3 ON T2.emp_num  =  T3.emp_num JOIN department AS T4 ON T4.dept_code  =  T3.dept_code WHERE T4.dept_name  =  'Computer Info. Systems'",
      "db_id": "college_1"
    },
    {
      "question": "Please list all album titles in alphabetical order.",
      "query": "SELECT Title FROM ALBUM ORDER BY Title",
      "db_id": "chinook_1"
    },
    {
      "question": "List the name and assets of each company in ascending order of company name.",
      "query": "SELECT name ,  Assets_billion FROM Companies ORDER BY name ASC",
      "db_id": "company_office"
    },
    {
      "question": "What are the id of each employee and the number of document destroyed by that employee?",
      "query": "SELECT Destroyed_by_Employee_ID ,  count(*) FROM Documents_to_be_destroyed GROUP BY Destroyed_by_Employee_ID",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "How many storms occured in each region?",
      "query": "SELECT T1.region_name ,  count(*) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id",
      "db_id": "storm_record"
    },
    {
      "question": "What is all the product data, as well as  each product's manufacturer?",
      "query": "SELECT * FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer  =  T2.code",
      "db_id": "manufactory_1"
    },
    {
      "question": "Show the ids of all employees who have destroyed a document.",
      "query": "SELECT DISTINCT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "For each project id, how many tasks are there?",
      "query": "SELECT count(*) ,  T1.project_details FROM Projects AS T1 JOIN Tasks AS T2 ON T1.project_id  =  T2.project_id GROUP BY T1.project_id",
      "db_id": "tracking_grants_for_research"
    },
    {
      "question": "Show the first name and last name for the customer with account name 900.",
      "query": "SELECT T2.customer_first_name ,  T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id  =  T2.customer_id WHERE T1.account_name  =  \"900\"",
      "db_id": "customers_and_invoices"
    },
    {
      "question": "Give me a list of descriptions of the problems that are reported by the staff whose first name is Christop.",
      "query": "SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = \"Christop\"",
      "db_id": "tracking_software_problems"
    },
    {
      "question": "Hom many albums does the artist \"Metallica\" have?",
      "query": "SELECT COUNT(*) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId  =  T2.ArtistId WHERE T2.Name  =  \"Metallica\"",
      "db_id": "chinook_1"
    },
    {
      "question": "Find the total number of employees.",
      "query": "SELECT count(*) FROM employee",
      "db_id": "college_1"
    },
    {
      "question": "Show the number of transaction types.",
      "query": "SELECT count(DISTINCT transaction_type) FROM Financial_Transactions",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "Find the first and last names of people who payed more than the rooms' base prices.",
      "query": "SELECT T1.firstname ,  T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room  =  T2.RoomId WHERE T1.Rate - T2.basePrice  >  0",
      "db_id": "inn_1"
    },
    {
      "question": "What are the names and types of the dorms that have a capacity greater than 300 or less than 100?",
      "query": "SELECT dorm_name ,  gender FROM dorm WHERE student_capacity  >  300 OR student_capacity  <  100",
      "db_id": "dorm_1"
    },
    {
      "question": "Show the id of the employee named Ebba.",
      "query": "SELECT employee_ID FROM Employees WHERE employee_name  =  \"Ebba\"",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "What is maximum and minimum RAM size of phone produced by company named \"Nokia Corporation\"?",
      "query": "SELECT max(T1.RAM_MiB) ,  min(T1.RAM_MiB) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name  =  T2.chip_model WHERE T2.Company_name = \"Nokia Corporation\";",
      "db_id": "phone_1"
    },
    {
      "question": "Which vocal type has the band mate with last name \"Heilo\" played the most?",
      "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE lastname  =  \"Heilo\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
      "db_id": "music_2"
    },
    {
      "question": "What are the types of vocals that the band member with the first name \"Solveig\" played the most?",
      "query": "SELECT TYPE FROM vocals AS T1 JOIN band AS T2 ON T1.bandmate  =  T2.id WHERE firstname  =  \"Solveig\" GROUP BY TYPE ORDER BY count(*) DESC LIMIT 1",
      "db_id": "music_2"
    },
    {
      "question": "What are the names and headquarters of all manufacturers, ordered by revenue descending?",
      "query": "SELECT name ,  headquarter FROM manufacturers ORDER BY revenue DESC",
      "db_id": "manufactory_1"
    },
    {
      "question": "List name and damage for all storms in a descending order of max speed.",
      "query": "SELECT name ,  damage_millions_USD FROM storm ORDER BY max_speed DESC",
      "db_id": "storm_record"
    },
    {
      "question": "Which attraction type does the most tourist attractions belong to? Tell me its  attraction type description and code.",
      "query": "SELECT T1.Attraction_Type_Description ,  T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code  =  T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "cre_Theme_park"
    },
    {
      "question": "What are the names of the states that have some college students playing in the positions of goalie and mid-field?",
      "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'mid'",
      "db_id": "soccer_2"
    },
    {
      "question": "What are the names of the physicians who have 'senior' in their titles.",
      "query": "SELECT name FROM physician WHERE POSITION LIKE '%senior%'",
      "db_id": "hospital_1"
    },
    {
      "question": "What is the most common participant type?",
      "query": "SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count(*) DESC LIMIT 1",
      "db_id": "local_govt_in_alabama"
    },
    {
      "question": "What is the maximum length in meters for the bridges and what are the architects' names?",
      "query": "SELECT max(T1.length_meters) ,  T2.name FROM bridge AS T1 JOIN architect AS T2 ON T1.architect_id  =  T2.id",
      "db_id": "architecture"
    },
    {
      "question": "What are the first, middle, and last names of all individuals, ordered by last name?",
      "query": "SELECT individual_first_name ,  individual_middle_name ,  individual_last_name FROM individuals ORDER BY individual_last_name",
      "db_id": "e_government"
    },
    {
      "question": "List name of all tracks in Balls to the Wall.",
      "query": "SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = \"Balls to the Wall\";",
      "db_id": "store_1"
    },
    {
      "question": "What are the allergies the girl named Lisa has? And what are the types of them? Order the result by allergy names.",
      "query": "SELECT T1.Allergy ,  T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy  =  T2.Allergy JOIN Student AS T3 ON T3.StuID  =  T2.StuID WHERE T3.Fname  =  \"Lisa\" ORDER BY T1.Allergy",
      "db_id": "allergy_1"
    },
    {
      "question": "What is the most common maximum page size?",
      "query": "SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count(*) DESC LIMIT 1",
      "db_id": "store_product"
    },
    {
      "question": "How many games were played in city Atlanta in 2000?",
      "query": "SELECT count(*) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id  =  T2.park_id WHERE T1.year  =  2000 AND T2.city  =  'Atlanta';",
      "db_id": "baseball_1"
    },
    {
      "question": "What are the names of all students who successfully tried out for the position of striker?",
      "query": "SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID  =  T2.pID WHERE T2.decision  =  'yes' AND T2.pPos  =  'striker'",
      "db_id": "soccer_2"
    },
    {
      "question": "What are the cell phone numbers of the candidates that received an assessment code of \"Fail\"?",
      "query": "SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = \"Fail\"",
      "db_id": "student_assessment"
    },
    {
      "question": "Which papers did the author \"Olin Shivers\" write? Give me the paper titles.",
      "query": "SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t1.fname  =  \"Olin\" AND t1.lname  =  \"Shivers\"",
      "db_id": "icfp_1"
    },
    {
      "question": "Find the name of the user who tweeted more than once, and number of tweets tweeted by them.",
      "query": "SELECT T1.name ,  count(*) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid  =  T2.uid GROUP BY T2.uid HAVING count(*)  >  1",
      "db_id": "twitter_1"
    },
    {
      "question": "When is the last day any resident moved in?",
      "query": "SELECT max(date_moved_in) FROM Residents",
      "db_id": "local_govt_and_lot"
    },
    {
      "question": "From which hometowns did both people older than 23 and younger than 20 come from?",
      "query": "SELECT Hometown FROM people WHERE Age  >  23 INTERSECT SELECT Hometown FROM people WHERE Age  <  20",
      "db_id": "gymnast"
    },
    {
      "question": "Find the birth dates corresponding to employees who live in the city of Edmonton.",
      "query": "SELECT BirthDate FROM EMPLOYEE WHERE City  =  \"Edmonton\"",
      "db_id": "chinook_1"
    },
    {
      "question": "Show the names and main services for train stations that have the top three total number of passengers.",
      "query": "SELECT name ,  main_services FROM station ORDER BY total_passengers DESC LIMIT 3",
      "db_id": "train_station"
    },
    {
      "question": "Find the name of branches where have some members whose hometown is in Louisville, Kentucky and some in Hiram, Georgia.",
      "query": "SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Louisville ,  Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id  =  T2.branch_id JOIN member AS T3 ON T1.member_id  =  T3.member_id WHERE T3.Hometown  =  'Hiram ,  Georgia'",
      "db_id": "shop_membership"
    },
    {
      "question": "What are the first name and last name of the players whose death record is empty?",
      "query": "SELECT name_first ,  name_last FROM player WHERE death_year = '';",
      "db_id": "baseball_1"
    },
    {
      "question": "Find the first name of students who are living in the Smith Hall.",
      "query": "SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid  =  T2.stuid JOIN dorm AS T3 ON T3.dormid  =  T2.dormid WHERE T3.dorm_name  =  'Smith Hall'",
      "db_id": "dorm_1"
    },
    {
      "question": "Give the section titles of the document with the name \"David CV\".",
      "query": "SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code  =  t2.document_code WHERE t1.document_name  =  \"David CV\"",
      "db_id": "document_management"
    },
    {
      "question": "What are the names of the instructors in the Comp. Sci. department who earn more than 80000?",
      "query": "SELECT name FROM instructor WHERE dept_name  =  'Comp. Sci.'  AND salary  >  80000",
      "db_id": "college_2"
    },
    {
      "question": "Find the last names of faculties who are members of computer science department.",
      "query": "SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO  =  T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID  =  T3.FacID WHERE T1.DName  =  \"Computer Science\"",
      "db_id": "college_3"
    },
    {
      "question": "How many products are there in the records?",
      "query": "SELECT count(*) FROM catalog_contents",
      "db_id": "product_catalog"
    },
    {
      "question": "Find all the forenames of distinct drivers who won in position 1 as driver standing and had more than 20 points?",
      "query": "SELECT DISTINCT T1.forename FROM drivers AS T1 JOIN driverstandings AS T2 ON T1.driverid = T2.driverid WHERE T2.position = 1 AND T2.wins = 1 AND T2.points > 20",
      "db_id": "formula_1"
    },
    {
      "question": "List the distinct director of all films.",
      "query": "SELECT DISTINCT Director FROM film",
      "db_id": "film_rank"
    },
    {
      "question": "What are the names of the airports in the city of Goroka?",
      "query": "SELECT name FROM airports WHERE city  =  'Goroka'",
      "db_id": "flight_4"
    },
    {
      "question": "How many products are there?",
      "query": "SELECT count(*) FROM products",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Find the product type whose average price is higher than the average price of all products.",
      "query": "SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg(product_price)  >  (SELECT avg(product_price) FROM products)",
      "db_id": "department_store"
    },
    {
      "question": "Show all the distinct buildings that have faculty rooms.",
      "query": "SELECT DISTINCT building FROM Faculty",
      "db_id": "activity_1"
    },
    {
      "question": "Return the names of cities, ordered alphabetically.",
      "query": "SELECT Name FROM city ORDER BY Name ASC",
      "db_id": "county_public_safety"
    },
    {
      "question": "What are the names and addressed of customers who have both New and Pending orders?",
      "query": "SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"New\" INTERSECT SELECT T1.customer_name ,  T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id  =  T2.customer_id WHERE T2.order_status_code  =  \"Pending\"",
      "db_id": "department_store"
    },
    {
      "question": "What are the carriers of devices that are not in stock anywhere?",
      "query": "SELECT Carrier FROM device WHERE Device_ID NOT IN (SELECT Device_ID FROM stock)",
      "db_id": "device"
    },
    {
      "question": "List the most common result of the musicals.",
      "query": "SELECT RESULT FROM musical GROUP BY RESULT ORDER BY COUNT(*) DESC LIMIT 1",
      "db_id": "musical"
    },
    {
      "question": "What are the distinct first names for students with a grade point of 3.8 or above in at least one course?",
      "query": "SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade  =  T2.lettergrade AND T1.StuID  =  T3.StuID WHERE T2.gradepoint  >=  3.8",
      "db_id": "college_3"
    },
    {
      "question": "Where is the headquarter of the company founded by James?",
      "query": "SELECT headquarter FROM manufacturers WHERE founder  =  'James'",
      "db_id": "manufactory_1"
    },
    {
      "question": "What are the names of the county that the delegates on \"Appropriations\" committee belong to?",
      "query": "SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id  =  T2.District WHERE T2.Committee  =  \"Appropriations\"",
      "db_id": "election"
    },
    {
      "question": "Find the name of the person who has friends with age above 40 and under age 30?",
      "query": "SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  >  40) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name  =  T2.name WHERE T2.friend IN (SELECT name FROM Person WHERE age  <  30)",
      "db_id": "network_2"
    },
    {
      "question": "What is the nationality of the journalist with the largest number of years working?",
      "query": "SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1",
      "db_id": "news_report"
    },
    {
      "question": "What are the first names and ages of all students who are playing both Football and Lacrosse?",
      "query": "SELECT fname ,  age FROM Student WHERE StuID IN (SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Football\" INTERSECT SELECT StuID FROM Sportsinfo WHERE SportName  =  \"Lacrosse\")",
      "db_id": "game_1"
    },
    {
      "question": "List the total points of gymnasts in descending order of floor exercise points.",
      "query": "SELECT Total_Points FROM gymnast ORDER BY Floor_Exercise_Points DESC",
      "db_id": "gymnast"
    },
    {
      "question": "Show all card type codes and the number of cards in each type.",
      "query": "SELECT card_type_code ,  count(*) FROM Customers_cards GROUP BY card_type_code",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "Show the ids of all employees who have either destroyed a document or made an authorization to do this.",
      "query": "SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed UNION SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed",
      "db_id": "cre_Doc_Tracking_DB"
    },
    {
      "question": "Find the name of the most popular party form.",
      "query": "SELECT t1.form_name FROM forms AS t1 JOIN party_forms AS t2 ON t1.form_id  =  t2.form_id GROUP BY t2.form_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "e_government"
    },
    {
      "question": "Show the company name and the main industry for all companies whose headquarters are not from USA.",
      "query": "SELECT company ,  main_industry FROM company WHERE headquarters != 'USA'",
      "db_id": "gas_company"
    },
    {
      "question": "Show all home cities except for those having a driver older than 40.",
      "query": "SELECT home_city FROM driver EXCEPT SELECT home_city FROM driver WHERE age  >  40",
      "db_id": "school_bus"
    },
    {
      "question": "What are the names of the directors who created a movie with a 5 star rating, and what was the name of those movies?",
      "query": "SELECT T1.director ,  T1.title FROM Movie AS T1 JOIN Rating AS T2 ON T1.mID  =  T2.mID WHERE T2.stars  =  5",
      "db_id": "movie_1"
    },
    {
      "question": "How many days had both mean humidity above 50 and mean visibility above 8?",
      "query": "SELECT COUNT(*) FROM weather WHERE mean_humidity  >  50 AND mean_visibility_miles  >  8",
      "db_id": "bike_1"
    },
    {
      "question": "List total amount of  invoice from Chicago, IL.",
      "query": "SELECT sum(total) FROM invoices WHERE billing_city  =  \"Chicago\" AND billing_state  =  \"IL\";",
      "db_id": "store_1"
    },
    {
      "question": "How many customers have an account?",
      "query": "SELECT count(DISTINCT customer_id) FROM Accounts",
      "db_id": "customers_card_transactions"
    },
    {
      "question": "List the writers who have written more than one book.",
      "query": "SELECT Writer FROM book GROUP BY Writer HAVING COUNT(*)  >  1",
      "db_id": "book_2"
    },
    {
      "question": "What are the titles of all movies that James Cameron directed after 2000?",
      "query": "SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR  >  2000",
      "db_id": "movie_1"
    },
    {
      "question": "Please show the names of the buildings whose status is \"on-hold\", in ascending order of stories.",
      "query": "SELECT name FROM buildings WHERE Status  =  \"on-hold\" ORDER BY Stories ASC",
      "db_id": "company_office"
    },
    {
      "question": "Find the states of the colleges that have students in the tryout who played in striker position.",
      "query": "SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName WHERE T2.pPos  =  'striker'",
      "db_id": "soccer_2"
    },
    {
      "question": "What are the names of shops that have more than a single kind of device in stock?",
      "query": "SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID  =  T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT(*)  >  1",
      "db_id": "device"
    },
    {
      "question": "How many products have the color description 'red' and the characteristic name 'slow'?",
      "query": "SELECT count(*) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id  =  t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id  =  t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code  =  t4.color_code WHERE t4.color_description  =  \"red\" AND t3.characteristic_name  =  \"slow\"",
      "db_id": "products_gen_characteristics"
    },
    {
      "question": "Which status code is the most common of all the bookings?",
      "query": "SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count(*) DESC LIMIT 1",
      "db_id": "cre_Drama_Workshop_Groups"
    },
    {
      "question": "Which country does customer with first name as Carole and last name as Bernhard lived in?",
      "query": "SELECT T2.country FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = \"Carole\" AND T1.last_name = \"Bernhard\"",
      "db_id": "driving_school"
    },
    {
      "question": "Find the id of the song that lasts the longest.",
      "query": "SELECT f_id FROM files ORDER BY duration DESC LIMIT 1",
      "db_id": "music_1"
    },
    {
      "question": "Find the states where have some college students in tryout.",
      "query": "SELECT DISTINCT state FROM college AS T1 JOIN tryout AS T2 ON T1.cName  =  T2.cName",
      "db_id": "soccer_2"
    },
    {
      "question": "Give the state corresponding to the line number building \"6862 Kaitlyn Knolls\".",
      "query": "SELECT state_province_county FROM addresses WHERE line_1_number_building LIKE \"%6862 Kaitlyn Knolls%\"",
      "db_id": "e_government"
    },
    {
      "question": "How many credits does the department offer?",
      "query": "SELECT sum(crs_credit) ,  dept_code FROM course GROUP BY dept_code",
      "db_id": "college_1"
    },
    {
      "question": "Show me the owner of the channel with the highest rating.",
      "query": "SELECT OWNER FROM channel ORDER BY rating_in_percent DESC LIMIT 1",
      "db_id": "program_share"
    },
    {
      "question": "Find the name and id of accounts whose checking balance is below the maximum checking balance.",
      "query": "SELECT T1.custid ,  T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid  =  T2.custid WHERE T2.balance  <  (SELECT max(balance) FROM checking)",
      "db_id": "small_bank_1"
    },
    {
      "question": "What are the names of all tracks that are on the Movies playlist but not in the music playlist?",
      "query": "SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id  =  T2.track_id JOIN playlists AS T3 ON T2.playlist_id  =  T3.id WHERE T3.name  =  'Music'",
      "db_id": "store_1"
    },
    {
      "question": "Find the payment method that is used most frequently.",
      "query": "SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count(*) DESC LIMIT 1",
      "db_id": "customer_deliveries"
    },
    {
      "question": "Find the total revenue of companies of each founder.",
      "query": "SELECT sum(revenue) ,  founder FROM manufacturers GROUP BY founder",
      "db_id": "manufactory_1"
    },
    {
      "question": "What are the maximum and minimum population of the counties?",
      "query": "SELECT max(Population) ,  min(Population) FROM county",
      "db_id": "election"
    },
    {
      "question": "How many papers are written by authors from the institution \"University of Pennsylvania\"?",
      "query": "SELECT count(DISTINCT t1.title) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid  =  t2.paperid JOIN inst AS t3 ON t2.instid  =  t3.instid WHERE t3.name  =  \"University of Pennsylvania\"",
      "db_id": "icfp_1"
    },
    {
      "question": "What are the first names and birthdates of the professors in charge of ACCT-211?",
      "query": "SELECT DISTINCT T1.EMP_FNAME ,  T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM  =  T2.PROF_NUM WHERE CRS_CODE  =  \"ACCT-211\"",
      "db_id": "college_1"
    },
    {
      "question": "Find the first names of all the authors who have written a paper with title containing the word \"Functional\".",
      "query": "SELECT t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid  =  t2.authid JOIN papers AS t3 ON t2.paperid  =  t3.paperid WHERE t3.title LIKE \"%Functional%\"",
      "db_id": "icfp_1"
    },
    {
      "question": "What is the student capacity and type of gender for the dorm whose name as the phrase Donor in it?",
      "query": "SELECT student_capacity ,  gender FROM dorm WHERE dorm_name LIKE '%Donor%'",
      "db_id": "dorm_1"
    },
    {
      "question": "What are the years of opening for tracks with seating between 4000 and 5000?",
      "query": "SELECT year_opened FROM track WHERE seating BETWEEN 4000 AND 5000",
      "db_id": "race_track"
    },
    {
      "question": "What are the names of actors ordered descending by the year in which their musical was awarded?",
      "query": "SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID  =  T2.Musical_ID ORDER BY T2.Year DESC",
      "db_id": "musical"
    },
    {
      "question": "Show all distinct positions of matches.",
      "query": "SELECT DISTINCT POSITION FROM match_season",
      "db_id": "match_season"
    },
    {
      "question": "How much did the the player with first name Len and last name Barker earn between 1985 to 1990 in total?",
      "query": "SELECT sum(T1.salary) FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id WHERE T2.name_first  =  'Len' AND T2.name_last = 'Barker' AND T1.year BETWEEN 1985 AND 1990;",
      "db_id": "baseball_1"
    },
    {
      "question": "What are the city name, id, and number of addresses corresponding to the city with the most addressed?",
      "query": "SELECT T2.city ,  count(*) ,  T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id  =  T2.city_id GROUP BY T1.city_id ORDER BY count(*) DESC LIMIT 1",
      "db_id": "sakila_1"
    },
    {
      "question": "Return the names of products that have had complaints filed by the customer who has filed the fewest complaints.",
      "query": "SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id  =  t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count(*) LIMIT 1",
      "db_id": "customer_complaints"
    },
    {
      "question": "Return the the \"active to date\" of the latest contact channel used by the customer named \"Tillman Ernser\".",
      "query": "SELECT max(t2.active_to_date) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id  =  t2.customer_id WHERE t1.customer_name  =  \"Tillman Ernser\"",
      "db_id": "customers_and_addresses"
    },
    {
      "question": "Find the Char cells, Pixels and Hardware colours for the screen of the phone whose hardware model name is \"LG-P760\".",
      "query": "SELECT T1.Char_cells ,  T1.Pixels ,  T1.Hardware_colours FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T2.Hardware_Model_name = \"LG-P760\";",
      "db_id": "phone_1"
    }
  ]
  